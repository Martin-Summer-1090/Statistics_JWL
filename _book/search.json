[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Statistics",
    "section": "",
    "text": "These are lecture notes for my introductory statistics and data literacy course I am developing for Jesuit Worldwide Learning (JWL) together with my colleagues from Seitwerk. I would like to thank Peter Balleis, Mathias Beck, Martha Habash, Stefan Hengst and Anny Mayr for all their generous help and support in kickstarting this challenging project.\nThe goal of the notes is to develop the core contents of the course systematically and to support the production of the online units. I also write up in these notes material and instructions for teaching material, which is meant to be used in the local study centers. My vision is that after we are through with the production of the online units, the notes will be overhauled and can then when the course actually begins, be used by the students as a textbook and reading material.\nFor the time beeing it is more like a systematic notebook and a scenario. I will add questions and comments for the Seitwerk team during this phase as collapsible callout notes like this:\n\n\n\n\n\n\nComment or Remark for Seitwerk\n\n\n\n\n\nThis is an example of a ‘folded’ caution callout that can be expanded by the user.\n\n\n\nThis helps me to keep a better overview of the overall development of the text.\nI will put the developing material on our MS-teams collaboration platform as we go along. Data and graphics will be put on the platform as separate files. In addition, mainly for the interaction with my past and future self, I keep a versioning of the notes on a public github archive, which may also be accessed by colleagues, and of course by the Seitwerk team. The github repository’s address is:\nhttps://github.com/Martin-Summer-1090/Statistics_JWL"
  },
  {
    "objectID": "introduction.html",
    "href": "introduction.html",
    "title": "1  Introduction",
    "section": "",
    "text": "Welcome to the course Statistics: The art and science of learning from data. In this introductory chapter you will get an overview of the basic skills you will learn in this course by discussing a few examples.\nOver time and with your active participation these skills will add a powerful seventh sense to your ability of experiencing the world. It will allow you to experience the world through data. Understanding data by the art and science of statistics is an essential skill you will need to navigate the modern world and to study many fields in the sciences."
  },
  {
    "objectID": "introduction.html#experiencing-the-world-through-data",
    "href": "introduction.html#experiencing-the-world-through-data",
    "title": "1  Introduction",
    "section": "1.1 Experiencing the world through data",
    "text": "1.1 Experiencing the world through data\n\n1.1.1 What are the major sources of electricity production in Kenya?\nWhat is the biggest source of electricity production in Kenya? Answering this question needs data, listing and recording various forms of electricity production in specific countries. An internationally acknowledged organisation, which collects and reports these data is the International Energy Agency (IEA).\n\n\n\n\n\n\nAccessing IEA data on the internet\n\n\n\nIf you have access to the internet, you can look up data and reports by the IEA on it’s website https://www.iea.org/11 A screenshot I have taken in August 2022 shows the website like this. In the upperm right part of the website there is a link called data which will bring you to the data collected by IEA. \n\n\nNow let’s take a quiz and guess. What do you think is actually the biggest source of electricity production in Kenya?\n\nCoal\nRenewable energy\nNatural gas\n\n\n\n\n\n\n\nSeitwerk: Expand for reading comment.\n\n\n\n\n\nIt would be great to make this like an online quiz, where you can click the answer and get right or wrong. Renewable energy is the right answer.\n\n\n\nConsulting the IEA data, you will find that the correct answer is renewable energy. A very interesting website called gapminder, which analyzes the answers of many people to this question, finds that 61 % give a wrong answer to this question. Maybe they find it hard to imagine that 80 % of energy production in Kenya is already fossil free thanks to huge sources of geothermal- and hydropower.2 Even if you break the answers down by country you see that 38 % of people from Kenya get the answer wrong. Among the people from the UK, who answer this question even 72 % answer wrongly.2 Geothermal electricity generation uses the earth’s natural heating energy - geothermal energy. A country needs to be located on a geothermal hot spot to make effective use of this energy source for electricity generation. At such a hotspot there are high temperatures beneath the earth’s surface which naturally produces steam. This steam can be used to spin turbines connected to a generator. This mechanism then produces electricity. Hydropower uses the water cycle to generate electricity by using dams to alter the flow of a river. The kinetic energy of the water spins turbines connected to a generator which produces electricity.\nIf you are not familiar with the details of electricity production using geothermal- and hydropower or if you are not completely sure how to interpret a number like 38 %, don’t worry for now. The point here is that you see that one useful consequence of being able to access, read and interpret data is that it can help to establish facts about the world. In this way data can help us to perhaps correct misconceptions we might have had about these facts.\n\n\n\n\n\n\nThe gapminder webpage\n\n\n\nIf you have internet access you can reach the gapminder webpage at https://www.gapminder.org/. I encourage you to visit this page at an occasion when you have access to the internet. You will be surprised how often you might have a wrong guess about basic facts in the world.33 Here is how the website looks like as of August 2022: \n\n\nIn this course you will learn how to work with data and how to learn from these data in a systematic way.\n\n\n1.1.2 How many trees are there on the planet?\nLearning from data entails more than just establishing facts. This might not always be possible, either because you cannot access the relevant data or you cannot completely access them, since doing so would be way too expensive. When working with data you also need rigorous definitions of concepts, so that you can actually transform your experience about the world into data\nThink for a moment about the following interesting example, which I learned from a wonderful book by the British statistician David Spiegelhalter (Spiegelhalter 2019). The example shows that even just categorizing and labeling things in the world to measure them and turn them into data can be challenging. A very basic question raised in the introduction of this book is:\n\n\n\n\n\n\nQuestion:\n\n\n\nHow many trees are there on the planet?\n\n\nIt is clear that answering this question is more challenging than the task the IEA had to solve when listing energy sources by country around the world in a given time period. But before you go about to think how you might count all the trees on the planet, you have to answer an even more basic question, namely: What is a tree?\nSome of you might think this is a silly and obvious question, which every child can answer. But what some might consider a tree others will consider just a shrub. Turning experience into data requires rigorous definitions. It turns out that such definitions can be given for trees. 44 For example the forestry expert Michael Kuhns writes: “…Though no scientific definition exists to separate trees and shrubs, a useful definition for a tree is a woody plant having one erect perennial stem (trunk) at least three inches in diameter at a point 4-1/2 feet above the ground, a definitely formed crown of foliage, and a mature height of at least 13 feet. This definition works fine, though some trees may have more than one stem and young trees obviously don’t meet the size criteria. A shrub can then be defined as a woody plant with several perennial stems that may be erect or may lay close to the ground. It will usually have a height less than 13 feet and stems no more than about three inches in diameter.” (Kuhns, n.d.)\nBut even with the definition at hand you cannot just go around the planet and count every plant that meets the criteria. So this is what the researchers investigating that question did according to (Spiegelhalter 2019):\n“…They first took a series of of areas with a common type of landscape, known as a biome and counted the average number of trees per square kilometer. They then used satellite imaging to estimate the total area of the planet covered by each type of biome, carried out some complex statistical modelling, and eventually came up with an estimate of 3.04 trillion (3,040,000,000,000) trees on the planet. This sounds a lot, except that they reckoned there used to be twice this number.”\nNow imagine that if long expert discussions are needed to precisely define something so seemingly obvious as a tree, clearly more complex concepts such as unemployment or the definition of the total value of goods and services produced in a country in a given year, known as Gross Domestic Product or GDP, is even more challenging.\nThere is no automatism or mechanical receipt how we can turn experience into data and the statistics that we use and produce are constructed on the basis of judgement. It is a starting point for a deeper understanding of the world around us. This is one of the reasons why in this course statistics is not only referred to as science, which it arguably is to some degree, but also as an art.\nTo guard against the trap of mindlessly fall into mechanical thinking or automatism it is sometimes helpful to make a rough plausibility estimates about the order of magnitude you might expect as a result for a really big number, like the number of trees on the globe.\n\n\n\n\n\n\nComment for Seitwerk: Please uncollapse\n\n\n\n\n\nHere would be a good opportunity to engage students in an activity estimating a big number. Since this has an interactive part, which better works when in class together, one could set up the problem with some guidance in the online unit and then discuss solutions in class. It might be fun to add a competitive element by splitting the students in teams or pairs and rewarding the team/pair who comes closest to the true value. Let them first just guess and then lead them through the guestimation a bit more systematically: One way to lead students through this exercise might be: How many people are there in country X, how many children of school age, how many of them ride the bus, how many students can be transported by a bus etc. The estimate will have lots of uncertainty but be hopefully closer to the truth than most of the original unguided guesses. It is a first encounter for the students with propagation of uncertainty, an important topic in statistics more generally. The activity contains further interesting aspects like reliability of data sources and the design of data collection. I am not quite sure whether and how to build this in at this stage but maybe you have an idea or suggestion.\nA good example would for instance be: How many school buses are there in country X?\n\n\n\n\n\n1.1.3 What has happened to extreme poverty on the globe in the last 20 years?\nOne of the limitations of data as a source of knowledge about the world is that anything we choose to measure will differ across places, across persons or across time. When analyzing and trying to understand data we will always face the problem how we can extract meaningful insights from this apparent random variation. One challenge faced by statistics and one core topic in this course will thus be how we can distinguish in data the important relationships from the unimportant background variability.\nExploring and finding such meaningful relationships or patterns in data using the science of statistics and computational tools is one of the skills you will learn in this course.\nAn example of a pattern in data is if we can spot a trend, data values which are for example increasing or decreasing.\nConsider the following data from the World Bank, reporting the share of people in the world who are living in extreme poverty. Extreme poverty is defined by the World Bank, an international development finance organisation for low and middle income countries located in the US5 as the percentage of people in the world who have to live on less that $ 1.90 per day. Hans Rosling in his great book Factfullness (Rosling, Rosling, and Rosling-Rönnlund 2018), gives a concrete description of what it means in concrete terms to live on this income level, which Rosling calls level 1. I quote from his book:5 The Worldbank is an international financial institution founded along with the International Monetary Fund in the Bretton Wods conference in 1944. It is located in Washington D.C. and finances projects in low and middle income countries. It also collects and processes data globally to support its activities and conduct development research. The Worldbank makes its data public in print or through its website https://www.worldbank.org/en/home\n“… Your five children have to spend hours walking barefoot with your single plastic bucket, back and forth, to fetch water from a dirty mud hole and hour’s walk away. On their way home they gather firewood, and you prepare the same gray porridge that you have been eating at every meal, every day, for your whole life - except during the months when the meager soil yielded no crops and you went to bed hungry. One day your youngest daughter develops a nasty cough. Smoke from the indoor fire is weakening her lungs. You can’t afford antibiotics, and one month later she is dead. Yet you keep struggling on. If you are lucky and the yields are good, you can maybe sell some surplus crops and manage to earn more than 2 $ a day, which would move you to the next level…(Roughly 1 billion people live like this today).\nLet us have a look at a table showing the first 10 observations of this share\n\n\nCode\n# read poverty data from our project data folder\npovdat_by_country <- read.csv(\"data/extreme_poverty/share-of-population-in-extreme-poverty.csv\")\n# select the years from 2000\npovdat_world <- with(povdat_by_country, povdat_by_country[Entity == \"World\" & Year >= 2000, ])\n# Keep only the year and the share\nplot_data <- povdat_world[,c(3,4)]\n# Rename variables\nnames(plot_data) <- c(\"Year\", \"Share\")\n\n# produce a table\nlibrary(knitr)\nkable(head(plot_data, n= 10), row.names = F, digits = 1)\n\n\n\n\nTable 1.1: Share of world polpulation living in extreme poverty, Source: World Bank\n\n\nYear\nShare\n\n\n\n\n2000\n27.8\n\n\n2001\n26.9\n\n\n2002\n25.7\n\n\n2003\n24.7\n\n\n2004\n22.9\n\n\n2005\n21.0\n\n\n2006\n20.3\n\n\n2007\n19.1\n\n\n2008\n18.4\n\n\n2009\n17.6\n\n\n\n\n\n\nCode\nwrite.csv(head(plot_data, n= 10), file = \"tables/table_1_1_world_poverty.csv\", row.names = FALSE)\n\n\nThe table shows that the share of people living in extreme poverty has been decreasing year after year for the first 10 years since the year 2000. This is a pattern which is called a downward trend.\nNote that we did not show the whole series of numbers. The data points in our data-set actually range until the year 2017. Printing them all in a table quickly produces very large and unwieldy number array which is awkward to read.\nExploring data and detecting patterns is usually easier when we use the power of the human visual system. Humans are very good in finding visual patterns. Looking for patterns is almost visceral for us. We can’t help but looking for patterns. This almost instinctive human urge can also be misleading and suggesting patterns to us where there are in fact none.\nIn data exploration we can make use of the power of visualization by plotting data and looking at them graphically. The modern computer has made this form of displaying data particularly easy and powerful and visualizing data in data exploration is another core skill you are going to learn in this course.\nSo let us visualize the world poverty data. In our plot we draw the year on the x-axes and the share of people living in extreme poverty on the y-axes. This will give us a point for each year. To facilitate the spotting of a trend, we connect the annual observations by a line.\n\n\nCode\nlibrary(ggplot2)\n\np <- ggplot(plot_data, aes(x = Year, y = Share)) + \n     geom_line() +\n     geom_point() +\n     xlab(\"\")\nggsave(plot=p, filename=\"figures/fig-share-of-people-in-extreme-poverty-world.png\")\np\n\n\n\n\n\nFigure 1.1: Share of world population living in extreme poverty from 2000 - 2017\n\n\n\n\nVisualizing trends in world extreme poverty as an example of data exploration. In this case the data pattern reveals a stunning fact. Over almost two decades we can see a sharp fall in the share of extremely poor people when looked at from a global perspective.\nOf course when we drill down to the level of individual countries this trend will not look the same everywhere and there might be countries where the share has actually increased. But overall we have seen a breathtaking steady decline. This is good news.66 When you have access to the internet you can have a closer look at these data at the very interesting website “our world in data” maintained by a consortium of Oxford University and University College London. See https://ourworldindata.org/extreme-poverty. The website has many interesting visualizations and options to select individual countries, country aggregates and make other selections of the data.\nBut does this trend mean that extreme poverty must disappear some years down the road? No, because nobody can tell whether the trend of the last two decades will go on also in the future.\nStatistics can help us to think more systematically about patterns and in making systematic guesses how a pattern might continue in the future. This is another core skill you will learn in this course: Making predictions, which means using available data and information to make informed guesses about data and information we do not have.\nLet us go back to the share of people in the world living in extreme poverty. As reported in our data the last actual observation for the global share in extreme poverty from the world bank is from 2017. There are more recent data for some regions but the global data since then are by now forecasts based on statistical techniques. The basic ideas of these techniques and how to apply them to data is a core skill you will learn in this course.\nNow what does the World bank predict for the share of extreme poverty in the world? Let us look at the data again graphically to visualize the prediction.\n\n\nCode\nobsdat <- data.frame(Year = plot_data$Year, Scenario = rep(\"Observed\", 18), Share = plot_data$Share)\n\nadd_dat <- data.frame(Year = 2018, Scenario = \"Observed\", Share = 8.6)\n\npred_dat_precovid <- data.frame(Year = c(2018, 2019, 2020, 2021), Scenario = rep(\"Pre-Covid-19\", 4), Share = c(8.6, 8.4, 7.9, 7.5))\n\npred_dat_covidbase <- data.frame(Year = c(2018, 2019, 2020, 2021), Scenario = rep(\"Covid-19-Baseline\", 4), Share = c(8.6, 8.4, 9.1, 8.9))\n\npred_dat_coviddown <- data.frame(Year = c(2018, 2019, 2020, 2021), Scenario = rep(\"Covid-19-Downside\", 4), Share = c(8.6, 8.4, 9.4, 9.4))\n\ndat <- rbind(obsdat, add_dat, pred_dat_precovid, pred_dat_covidbase, pred_dat_coviddown)\n\np <- ggplot(dat, aes(x = Year, y = Share, group = Scenario, color = Scenario)) + \n  geom_line(alpha = 0.5)+\n  geom_point()+\n  scale_color_manual(values=c('green', 'red', 'black', 'blue'))\nggsave(plot=p, filename=\"figures/fig-share-of-people-in-extreme-poverty-world-forecast.png\")\np\n\n\n\n\n\nFigure 1.2: Share of world population living in extreme poverty from 2000 - 2017 with predictions until 2021\n\n\n\n\nObserve that the line showing the share of extreme poverty in the world takes different distinct future paths as we make predictions. What does this mean?\nAt the root of the predictions is an abstract model7, how the share of poverty changes over time. If the underlying data would correspond to a world before Covid the falling trend in poverty would just continue to fall, as it has done continuously from 2000 onward. In the graph you can see this scenario if you follow the black and the blue line. But taking the pandemic and the consequences into account the prediction of the World Bank is that extreme poverty after a almost two decades downward trend will rise again. This you can see by following the green and the red line. How much, this rise actually will be in the end depends on data we can not yet know.7 If you have difficulties now to imagine what this means, don’t worry. We will learn in detail what a model is and how it can be interpret. In practice a model is usually an equation which provides a low-dimensional summary of a dataset. This summary is then used to make predictions.\nWhen we make informed guesses based on observed data on information we do not yet have there is uncertainty involved. Using the theory of probability in combination with statistics we can quantify this uncertainty. Quantifying the uncertainty attached to predictions is the third basic skill you will learn in this course.\n\n\n1.1.4 Does taking your time in college pay off?\nA newspaper in Germany reported that the more semesters needed to complete an academic program at the university the greater the starting salary in the first year of a job. The report was based on a study that used a random sample8 of 24 people who had recently completed an academic program.8 We will later in the course learn in detail what a random sample is. For the moment imagine that there is a mechanism which allows to select these 24 students at random from the large population of all university students in Germany. When a sample is random, every member in the sample has the same probability of beeing chosen from the population.\nInformation was collected on the number of semesters each person in the sample needed to complete the program and the starting salary, in thousand Euros, at the beginning of the job.\nThe data are shown in the following plot\n\n\nCode\ndat <- read.csv(\"data/college_years_salaries/coll_sal.csv\")\n\nlibrary(ggplot2)\n\np <- ggplot(dat, aes(x=Time, y=Salary)) +\n     geom_point()\nggsave(plot=p, filename=\"figures/Years_in_college_versus_starting_salary.png\")\np\n\n\n\n\n\nRelation between the semesters needed by a random sample of 24 German students to complete an academic university programm and the starting salary in the first year in the job.\n\n\n\n\nWhat you see in this picture is a so called scatter-plot. It takes the data and plots all pairs of time in semesters needed to complete the academic university program and the starting salary in the job, where the first value is shown on the x-axis and the second on the y-axes. The points you draw like this are “scattered” all over the place, but it seems that “by and large” there is also some trend - shown as a blue line - like this:\n\n\nCode\np <- ggplot(dat, aes(x=Time, y=Salary)) +\n     geom_point() +\n     geom_smooth(method = \"lm\", se = FALSE)\nggsave(plot=p, filename=\"figures/Years_in_college_versus_starting_salary_with_trend.png\")\np\n\n\n\n\n\nRelation between the semesters needed by a random sample of 24 German students to complete an academic university programm and the starting salary in the first year in the job with a linear trend fitted to data.\n\n\n\n\nLooking at the data, does this plot support the claim of the Newspaper?\nApparently the journalist writing the article saw a pattern, shown here as the blue line, which suggests that on average the salaries are really increasing with the semesters spent at the university. But is this pattern plausible? What do you think?\nAn independent researcher, who doubted the result, received the data from the newspaper and did a new analysis by separating the data into three groups based on the major of each person.\n\n\nCode\np <- ggplot(dat, aes(x=Time, y=Salary, group = Major, color = Major)) +\n     geom_point()\nggsave(plot=p, filename=\"figures/Years_in_college_versus_starting_salary_by_major.png\")\np\n\n\n\n\n\nRelation between the semesters needed by a random sample of 24 German students to complete an academic university programm by major and the starting salary in the first year in the job.\n\n\n\n\nNow, looking at this plot, describe the relation for students with a major in business. How could the newspaper report be modified to describe the data?\n\n\n\n\n\n\nComment for Seitwerk\n\n\n\n\n\nThis example works particularly well for involving students. I am not quiet sure how to build this interactive element in the online unit. maybe you have an idea.\n\n\n\nYou see in this example that looking for patterns is not as easy as it seems. Again we see that there are no automatism. You will need the skills you learn in this course to gain competence in distinguishing actual patterns from spurious ones.\nWhy did I go through all these example with you in the beginning, pinning down the share of renewable energy in the electricity production in Kenya, estimating the number of trees on the planet, long term trends in world extreme poverty, and the relation between study time and beginning salaries for students in Germany? All these examples illustrate some special skills you will learn in this course. Hopefully it also convinced most of you that statistics and working with data is an exciting field and a way to engage with real world issues.\nSo these are the three core skills you will learn in this course:"
  },
  {
    "objectID": "introduction.html#the-three-basic-skills-you-will-learn-in-this-course",
    "href": "introduction.html#the-three-basic-skills-you-will-learn-in-this-course",
    "title": "1  Introduction",
    "section": "1.2 The three basic skills you will learn in this course",
    "text": "1.2 The three basic skills you will learn in this course\n\n\n\n\n\n\nThe three basic skills you will learn in this course\n\n\n\nAfter successfully completing this course students you will have learned three core skills:\n\nData exploration or finding patterns in data and information through visualisation and computation.\nMaking predictions, which means using available data and information to make informed guesses about data and information we do not have.\nTo quantify the uncertainty we have to attach to our predictions.\n\n\n\nThe course is split into 8 units in total. Units 1, 2 and 3 will be mostly be concerned with data exploration and with making comparisons based on data. You will also learn step by step how you can use the computer for data exploration and visualization. We assume no prior knowledge and start from scratch. We also do not strive for completeness. The idea is that you acquire the practically most important skills and get maturity to drill deeper for yourself after the course either in your further studies or on the job.\nUnit 4 and unit 5 will be predominantly be concerned with models and using models for prediction. Here you will learn how to spot trends in data, how you can discern actual information in data, so called signals, from random variation, called noise.\nUnits 6, 7 and 8 will focus on how to quantify uncertainty related to prediction and inference from data. Here is the place where probability theory combines with statistics to provide analytically and practically powerful tools which ground data analysis in a firm scientific foundation. This is also the most challenging part of the course and it will require lots of practice and participation from you to acquire this important skill.\n\n\n\n\n\n\nComment for Seitwerk\n\n\n\n\n\nIn your template you suggest that in the introduction I give a minute overview of the details of topics learned in the course. I would prefer to abstain from this, because it contains lot of terms the students will learn step by step and it is probably boring at this stage. I would rather prefer the big picture approach outlined here with the three basic skills as the guiding posts. If listing the details is a must, it would look roughly like this:\n\n\n\n\n\n\nUnit 1: Overview; Categorical Data and Proportions\n\n\n\nIn unit 1 we will give an overview of the course and we begin with the analysis and understanding of binary variables, variables that can be imagined as simple yes or no questions and how they can be summarized as proportions or percentages. You will learn about how the idea of expected frequency will promote the understanding of the meaning of these shares and how this provides a basic understanding of the importance of these numbers.\n\n\n\n\n\n\n\n\nUnit 2: Summarizing and Communication lots of data; From limited data to populations\n\n\n\nIn unit 2 we learn how to deal with lots of data, the typical situation we will face when we do statistics. When there are lots of data we need instruments and tools to summarize them and to get an overview. This overview is usually also very important for communicating the data and the information they might contain. We will also learn how we can use statistics to learn properties about large populations by only making limited observations on some appropriately chosen subset of individuals from this population. The gold standard in making such inferences possible is the concept of a so called random sample. But at each step of the sampling procedure bias can crop up and invalidate our results leading to wrong conclusions. The circumstances under which inference from samples to populations can be made and how we can make sure to minimize bias we need a firm understanding of the opportunities and limits of this important technique.\n\n\n\n\n\n\n\n\nUnit 3: What causes what?\n\n\n\nIn unit 3 we discuss when data analysis allows us to say something about what causes what. We learn about the important concept of randomized trials. We will also learn what an observational study is and how it differs from a randomized trial. This is an important concept we will learn through the discussion of real world examples.\n\n\n\n\n\n\n\n\nUnit 4: Modelling relationships using regression and algorithmic predictions\n\n\n\nIn unit 4 we will learn a key concept needed to make predictions. The technical term for this concept in statistics is regression. It is a simple mathematical model describing how a set of explanatory variables varies systematically with a response variable. We will learn to construct such models and to interpret them correctly. We will also cover related techniques which have become very important recently and entered the statistical toolbox from the field of computer science. These methods are known under the notion of algorithmic prediction or machine learning.\n\n\n\n\n\n\n\n\nUnit 5: How sure can we be about what is going on: Estimates and Intervals.\n\n\n\nIn unit 5 we encounter the first time tools for quantifying uncertainty. We learn how to determine and use uncertainty intervals by using a technique which is called the bootstrap. Being able to determine such intervals is extremely important in communicating statistics and for supporting a systematic and sound answer to the question: How sure can we be about an estimate.\n\n\n\n\n\n\n\n\nUnit 6: Probability: Quantifying uncertainty and variability\n\n\n\nIn unit 6 we deepen the knowledge how to quantify uncertainty by introducing basic ideas of probability theory. Probability theory provides a formal language and mathematics for dealing with chance phenomena. Probability is often counter intuitive but using the idea of expected frequency improves intuition. Probability ideas can be very useful in statistics even if there is no explicit use of a randomizing mechanism. Many social phenomena show a remarkable regularity in their overall pattern while individual events are entirely unpredictable.\n\n\n\n\n\n\n\n\nUnit 7: Putting Probability and Statistics together\n\n\n\nIn unit 7 we put statistics and probability theory together. This allows us to both simplify ideas and techniques how to quantify uncertainty. The combination of the two field makes the tools for quantifying uncertainty at the same time more powerful. Combining statistics and probability theory is at the heart of statistics as a science. It makes all the ideas developed in unit 1 to 6 very versatile and powerful.\n\n\n\n\n\n\n\n\nUnit 8: Answering questions and claiming discoveries\n\n\n\nIn unit 8 we learn how to leverage the knowledge of this course to answer questions and to claim discoveries. You will learn how statistics is used in the sciences and how it supports to develop our knowledge of the world. It pulls many ideas of the whole course together and when you have mastered this unit you have mastered all the basic skills we want to develop in this course, data exploration, prediction and quantifying uncertainty."
  },
  {
    "objectID": "introduction.html#on-the-use-of-the-computer",
    "href": "introduction.html#on-the-use-of-the-computer",
    "title": "1  Introduction",
    "section": "1.3 On the use of the computer",
    "text": "1.3 On the use of the computer\nOur approach to teach you basic ideas of statistics and data analysis will be very much problem and activity oriented. The application of specific statistical techniques will be only one component in a whole package of activities you will need to engage in when you work with data in real world applications. Preparing data appropriately for analysis as well as communicating the conclusions for your analysis will be important elements of the whole process of statistical analysis. Today these activities involve using a computer.\nIn this course you will also learn how to use the computer. It will play an important role for developing your skills. We will make no assumptions of prior knowledge of computers and programming and will introduce the use of the computer step by step.\nUsing a computer requires a language in which we can tell the computer what to do and which the computer can understand. The language of our choice for this course is called R. It is one of the most widely used and most powerful languages for data analysis and statistics. We will introduce you to the language and its use step by step as we go along and in parallel with the statistical concepts we develop."
  },
  {
    "objectID": "introduction.html#activities-in-the-study-center",
    "href": "introduction.html#activities-in-the-study-center",
    "title": "1  Introduction",
    "section": "1.4 Activities in the study center",
    "text": "1.4 Activities in the study center\n\n1.4.1 Visualizing the share of extremely poor people for different countries\n\n\n\n\n\n\nComment for Seitwerk\n\n\n\n\n\nHere we assume that students have a running R and R-Studio or R with Jupyter Notebook or Jupyter Lab installation on their laptops at the study center. We would give the code in a notebook with the code chunk shown in the source file, to play with.\nWhile we need not pin down all the details of the computational infrastructure yet, we need a discussion how to integrate the computer instructions into the course and the material I have to prepare for that. I would very much prefer a minimalist solution with R and some kind of notebook but not more.\n\n\n\nLets go back to figure Figure 1.1 for a moment. This figure has been created by the use of the computer.\nIn the following box you see the computer code that has read the data from a file and then plotted the share for the world and for a particular country, say China. Don’t worry if you do not (yet) understand the details of the code. Think of it as a language that tells the computer what to do with the data. You can edit the code and delete China and insert another country instead. If you click the green arrow at the upper right corner of the box the computer will run the code again and generate a new graphic.\n\n\n\n\n\n\nComment for Seitwerk\n\n\n\n\n\nThe details of this will of course depend on the kind of notebook we use. We can use in principle three options. Option 1: Have an installation of Rstudio (https://www.rstudio.com/). RStudio is the most popular (and free) IDE for development of R code. In R Studio we can open quarto notebooks (qdm) and run code interactively there. Pro: Works seamlessly with my notes and enhances production efficiency. Con: You need to explain students the IDE in addition to R, though no big deal it is an additional complication. Option 2: Jupyter Notebook with an R kernel (ipynp). Pro: If JWE decides to work more with Jupyter notebooks on a broader base, seamless integration for this strategy. Con: same as with R studio and just a tiny inch more awkward to produce for me. Option 3: Work in the R console only. Pro: No IDE or notebook. Con: perhaps a bit too difficult to use for students without Computer Science background.\n\n\n\nTry to play and experiment with the code in this way to see what happens. Soon you will know yourself how to make interesting and beautiful data visualizations yourself.\n\n\nCode\nlibrary(ggplot2)\n\ndemo_data <- read.csv(\"data/extreme_poverty/share-of-population-in-extreme-poverty.csv\")\n\nnames(demo_data) <- c(\"Country\", \"Code\", \"Year\", \"Share\")\n\npl_dat <- with(demo_data, demo_data[Country %in% c(\"World\", \"China\") & Year >= 2000, ])\n\np <- ggplot(pl_dat, aes(x = Year, y = Share, color = Country)) +\n     geom_point() +\n     geom_line() +\n     xlab(\"\")\nggsave(plot=p, filename=\"figures/fig-share-of-people-in-extreme-poverty-world-china.png\")\n\n\nSaving 7 x 5 in image\n\n\nCode\np\n\n\n\n\n\n\n\n1.4.2 Guessing ages\nThis is an exercise which needs the leadership of an instructor at the study center. It would be great to collect the data of the exercise in a readable file for later use in the course.\nWe have 10 photos of persons whose age is known to us but not to the students. We divide students into 10 groups A through J. Each group gets one of the photos. The students in each group are asked to estimate the age of the person in their photograph and write the guess into a form. Each group must come up with a single estimate.\nExplain that each group will be estimating the ages of all 10 photos and that groups are competing to get the lowest error. Each group passes its card to the next group (A to B, B to C, etc. J back to A) and estimates the age of the new photo. This is continued until each group has seen all photos.\nThe data are written in a table where the rows are groups and the columns are card numbers. We can discuss the expected accuracy of the guesses (within how many years do you think you can guess). Then start with card 1 and ask groups to give their guess, then reveal the true age and write it at the bottom margin of the first column.\nIntroduce the concept of error - guessed age minus actual age - and wrote the errors in place of the guessed ages. Then fill the whole table. Ask the students to compute the absolute average error.\nStudents get an idea about: uncertainty, empirical analysis and data display. There are many statistical ideas in this game and the data can be taken up throughout the course (variance, bias, experimental design, randomization, linear regression, two-way tables, statistical significance).\nTo illustrate the idea more precisely:\nFor each card your group is given, estimate the age of the person on the card and write your guess on the table below in the row corresponding to this numbered card. Later students are told the true ages and they can compute the error. The error is defined as estimated minus actual age.\n\nExample for group card, guessing ages\n\n\nCard\nEstimated\nActual\nError\n\n\n\n\n1\n\n\n\n\n\n2\n\n\n\n\n\n3\n\n\n\n\n\n4\n\n\n\n\n\n5\n\n\n\n\n\n6\n\n\n\n\n\n7\n\n\n\n\n\n8\n\n\n\n\n\n9\n\n\n\n\n\n10\n\n\n\n\n\n\n\n\n1.4.3 Collect data from students.\nOne data collection exercise, which might be fun here is to collect the height and hand span from students in the class. Later when we teach regression we can compare to the data Pearson collected on university students over 100 years ago.\n\n\n\n\nKuhns, Michael. n.d. “What Is a Tree?” https://forestry.usu.edu/tree-identification/what-is-a-tree.\n\n\nRosling, Hans, Ola Rosling, and Anna Rosling-Rönnlund. 2018. Factfullness, 10 Reasons Why We Are Wrong about the World - and Why Things Are Better Than You Think. Sceptre.\n\n\nSpiegelhalter, David. 2019. The Art of Statistcis: Learning from Data. Pelican Books."
  },
  {
    "objectID": "categorical_data_and_proportions.html",
    "href": "categorical_data_and_proportions.html",
    "title": "2  Categorical Data and Proportions",
    "section": "",
    "text": "Overview\n\n\n\n\nIn this chapter we will learn how to analyze and communicate binary variables. Binary variables express answers to yes-no questions. When we summarize many such answers we can express them as proportions or percentages.\nWe will discuss these concepts within the examples of infant-mortality. This topic is not only interesting because it provides you a very important real world case where we work with counts and proportions of binary variables. It is also a great story of progress and positive global developments, where the data show you how much we have achieved together to better the life of children and infants.\nYou will learn about important aspects when you communicate such data such as framing, choosing appropriate and truthful visualizations and translate numbers in a way that promotes understanding.\nYou will also make your first steps in R, a computer language that we will use throughout the course and where you are going to build your skills step by step. Here you will already do your first visualization applying all the principles taught in this section.\nWhen a variable can take on not only two but more values we speak of categorical variables and we discuss and generalize the principles we learn about the display and communication of binary data to the case of categorical data.\nYou will learn about the important notions of relative and absolute risks and what an odds ratio is. By the end of this section you will have learned some important principles of data visualization and communication that will be relevant and important also in other lessons.\nThe death of a child is a tragedy to its family. The numbers of such events across the globe add up to millions. Max Roser, in an article on the website “Our world in Data” (Roser 2019), reports that from 56 million people who died for example in the year 2017, 5.4 millions were children under the age of 5. This is a number of enormous scale that never makes the headlines.\nIn his article Roser (Roser 2019) puts this scale into perspective. He writes:\n“…The suffering and dying of children remains immense, yet these daily tragedies continue without receiving the attention this injustice deserves. A comparison of the tragedy of child deaths with those tragedies that do receive public attention puts it in perspective. A large jumbo jet can carry up to 620 passengers. The number of child deaths is that of 24 jumbo jet crashes, with only children on board, every single day. Single events – such as plane crashes – always make the headlines. Daily tragedies – even the worst ones like the deaths of thousands of children – never make the headlines.\nIn pre-industrial societies infant- and child-mortality were uniformly and cruelly high. They were a universal and frequent experience for families all over the world.\nMortality statistics distinguish between infant- and child-mortality. If a child dies within the first year of his life, this is classified and counted as an infant death and the statistics is referred to as infant-mortality statistics. If a child dies before its fifth year this is classified as child-mortality.\nMortality statistics are reported in different formats. Often the concept of a mortality-rate is used in such reports. These are usually mortality rates standardized to 1000 life births. To compute an infant mortality rate in a given year in a given geographic area one would, for instance, need to know how many babies were born alive in a given period in a given area and how many babies who were born alive died before their first birthday during the same period. The number of deaths is the divided by the number of births. This rate is then multiplied by 1000, so that the rate reflects the number of infant deaths per 1000 life births in a standardized manner. This is just a reporting convention. We also could multiply by 10.000 of 100.000 depending on the level of comparison that is required. Reporting mortality statistics as mortality rates has the advantage that it communicates the risk as an expected frequency. Instead of percentages of probabilities it conveys directly what it means, for example, for 1000 births.\nThe production and reporting of mortality statistics is a modern phenomenon. In many countries there are now statistical registry systems that record infant-deaths in legally regulated processes. But this is not the case all over the world. Poorer countries find it hard to have such processes in place. Still for these countries, where no registry data are available, the United Nations Health Organisation conduct high quality surveys that allow a fairly precise estimate of infant mortality rates. We will learn later in the course how you can draw conclusions from a survey to the whole population with a certain confidence. Today using either registry data of surveys we know a lot more about infant mortality based on a rich amount of data.\nHistorically these statistics can only be based on estimation and proxies of different and varied sources. In a scientific publication Anthony Volk and Jeremy Atkinson made an attempt to report mortality rates of infants and children in the past, collecting data from a wide range of geographic locations and cultures reaching far back in history (Antony and Jeremy 2013).\nThe authors find that in the entire sample about 27 % of children died in their first year of life and 46 % died before they reached adulthood. These numbers are surprisingly similar across regions and cultures: Every forth newborn child died in the first year of life, every second child during its early childhood. These high mortality rates are a major cause of the slow population growth of past centuries before the onset of the industrial revolution at around 1800.\nThe table shows infant mortality in the year 1860 as percent in decimal notation. So 0.124, for example, means 12.4 %. This is the percentage of infant deaths in Sweden in 1860. It is better than the historical numbers reported by (Antony and Jeremy 2013) but still fairly high. Others at that time bigger countries with a much more heterogeneous population like Germany and Austria were pretty much at where the rates had always been in the past. The countries for which we have data from 1860 are all in Europe. Some of the bigger countries by this time had begun to register and report infant deaths in a mortality statistics.\nBefore we deal with the information conveyed by these data, let us take the opportunity to discuss some terminology and technical terms that we will always use when we deal with tabular data like the ones shown in Table 2.1.\nIn this chapter we will use counts and proportions as the leading example to discuss the basic presentation of statistics and data. We will learn about alternative ways to display data. You will learn how design choices for the display of data help or prevent engagement and readability for your respective audience. You will also learn the first steps in R and how to use the computer to analyze and communicate data."
  },
  {
    "objectID": "categorical_data_and_proportions.html#communicating-counts-and-proportions",
    "href": "categorical_data_and_proportions.html#communicating-counts-and-proportions",
    "title": "2  Categorical Data and Proportions",
    "section": "2.1 Communicating Counts and Proportions",
    "text": "2.1 Communicating Counts and Proportions\nLet us follow the history of infant mortality around the globe. When we looked at the year 1860 rates of infant mortality were very high, not much better than it had been all the centuries before industrialization has set in in Europe.\nBut then about 100 years later we already see a significant reduction in the Western countries, with rates reduced still much further until now in the most affluent countries. Let us look at the country group for which we had data in 1860 already, again today in 2020, before we go to the global picture. We will use this example to discuss some important aspects of communication counts and proportions.\n\n\nCode\n# Select the country group used in the historical 1860 data\n\nrate_2020 <- infant_mortality[infant_mortality$Country %in% rate_1860$Country & infant_mortality$Year == 2020, c(\"Country\", \"Continent\", \"Mortality\")]\n\n# display the table and write text file of table\n\nlibrary(knitr)\nkable(rate_2020, digits = 4, row.names = FALSE)\n\n\n\n\nTable 2.2: Infant mortality in some European countries in 2020.\n\n\nCountry\nContinent\nMortality\n\n\n\n\nAustria\nEurope\n0.0030\n\n\nBelgium\nEurope\n0.0034\n\n\nDenmark\nEurope\n0.0031\n\n\nFrance\nEurope\n0.0034\n\n\nGermany\nEurope\n0.0031\n\n\nNorway\nEurope\n0.0018\n\n\nSpain\nEurope\n0.0027\n\n\nSweden\nEurope\n0.0021\n\n\n\n\n\n\nCode\nwrite.csv(rate_2020, file = \"tables/table_2_2_infant_mortality_2020.csv\", row.names = FALSE)\n\n\nThis is a spectacular improvement for this group of countries. By 2020 we have much more data, covering more regions and we will follow the global story later. But let us stick for the moment with this group of European Countries, which we followed over a time span of 160 year.\nWithin a bit more than a century the mortality rate has been reduced from 30 % to below 0.3 %. This amounts to a reduction by a factor of about 100. Isn’t this a stunning achievement?\n\n\n\n\n\n\nNow you try\n\n\n\nThis is a good opportunity to practice and refresh your skills in manipulating percentages. Compute and report the reduction in the share of infant mortality for each of the 8 countries between 1860 and 2020 based on the numbers reported in Table 2.1 and Table 2.2\n\n\nIn a recent book (Smil 2020), the Canadian researcher Vaclav Smil has pointed out that such low rates are impossible without the combination of a number of critical conditions, such as good healthcare in general, appropriate prenatal, perinatal and neonatal5 care, proper maternal and infant nutrition, adequate sanitary living conditions as well as access to social support for disadvantages families. All of these factors require relevant government and private spending and on infrastructures that can be universally used and accessed. Infant mortality is thus a very powerful indicator of quality of life in a country.5 prenatal is a word rooted in ancient Latin and means before birth. Perinatal means around the time of birth and neonatal means the first month after birth of a child.\nWhen data, such as counts and proportions are reported in a table we should make careful considerations how the data are precisely presented.\nFor instance in the table about infant mortality in some European countries in 1860, we could have reported the same information by presenting survival rates instead of mortality rates. Such a choice in reporting is generally known as framing.\nFraming can have effects on the impact of communication. Depending on how you frame the communication of data, the same information might affect and engage your audience differently. The same table with survival rates instead of mortality rates would the look like this.\n\n\nCode\nsrate_1860 <- rate_1860\nsrate_1860$Survival <- 1 - rate_1860$Mortality\n\n# table for 1860 survival rates\n\nsrate_1860 <- with(srate_1860, srate_1860[ , c(\"Country\", \"Continent\", \"Survival\")])\n\nlibrary(knitr)\nkable(srate_1860, digits = 4, row.names = FALSE)\n\n\n\n\nTable 2.3: Infant survival rates in some European countries in 1860\n\n\nCountry\nContinent\nSurvival\n\n\n\n\nAustria\nEurope\n0.763\n\n\nBelgium\nEurope\n0.861\n\n\nDenmark\nEurope\n0.864\n\n\nFrance\nEurope\n0.850\n\n\nGermany\nEurope\n0.740\n\n\nNorway\nEurope\n0.898\n\n\nSpain\nEurope\n0.826\n\n\nSweden\nEurope\n0.876\n\n\n\n\n\n\nCode\nwrite.csv(srate_1860, file = \"tables/table_2_3_infant_survival_1860.csv\", row.names = FALSE)\n\n\nTake for instance the data for Germany 1860. If we had reported a survival rate of 74 % it might sound to many better than if we had reported the equivalent information of a mortality rate of 26 %. So whenever you report counts or proportions be mindful of framing effects.\nRisk impression can often be made more clear if we report expected frequencies as well\nas percentages. In this way the risk can be imagined as an actual crowd of people. For example we could visualize the infant mortality rate in Germany by creating a picture of the mortality rate, the actual number of cases per 1000 life births. If there are relatively few cases, as in 2020 Germany, this arbitrary normalisation leads to an artificial number such as 3.1 deaths per 1000 life births. Of course this is an artifact of the normalisation because there is nothing as an event with 0.1 deaths. If we had normalized to 10000 this would amount to 31 in 10000 which sounds more like an actual count. So for the visualization we take an infant mortality rate as infant deaths per 1000 life births to be 3.\nSuch a visualization could then look for example like this:\n\n\nCode\nlibrary(waffle)\nwaffle(c(\"Death\" = 260, \"Survived\" = 740), rows = 20, colors = c(\"#FD6F6F\", \"#93FB98\"), use_glyph = \"child\", glyph_size = 4, equal = F)\n\n\n\n\n\nIn 1860 in Germany among 1000 newborns 260 infants died in the first year of their life.\n\n\n\n\nHere you visualize the numbers as differently colored crowds. There are 20 rows with 50 people symbols each. This multiplies to a crowd of 1000 people. It makes the magnitude of the mortality rate (as well as the survival rate) tangible. The share of infant death per 1000 life births in Germany in 1860 becomes now more tangible than reporting just a percentage in a table.\nWhen you plot the same graph for the data of 2020 the enormous improvement that took place within a time span of one and a half centuries in Germany become perhaps more obvious than just looking at the rates alone. The same kind of visualization for the 2020 data would then look like this\n\n\nCode\nlibrary(waffle)\nwaffle(c(\"Death\" = 3, \"Survived\" = 997), rows = 20, colors = c(\"#FD6F6F\", \"#93FB98\"), use_glyph = \"child\", glyph_size = 4, equal = F)\n\n\n\n\n\nIn 2020 in Germany among 1000 newborns 3 infants died in the first year of their life.\n\n\n\n\nFrom this perspective the improvement in infant mortality rates in Germany are truly spectacular.\nStill even at the low mortality rate this can mean a huge amount of individual tragedies. In 2020 Germany had 760.378 births. 0.31 % of this amounts to 2357 individual tragedies. Even if this rate could be brought down further, say to 0.28 % which sounds like a tiny improvement, it would mean 228 infant lives that could be saved.\n\n\n\n\n\n\nNow you try\n\n\n\nDavid Spiegelhalter (Spiegelhalter 2019) whose book we have encountered when we discussed the question of how many trees there are on the planet, describes an advertisement in the London Underground, saying that 99 % of young Londoners do not commit serious crimes. The add was presumably intended to reassure passengers that riding on the London Underground is very safe. Try to imagine what this statement would mean when you think about this information in terms of crowds of young Londoners, assuming that “young” means between 15 and 25. Try to exlpain how the same information presented differently may have a different impact. What kind of communication tools we have just heard about, have been applied here?\n\n\n\n\n\n\n\n\nSeitwerk: A remark on answer.\n\n\n\n\n\nTurn a positive frame into a negative one and then imagine actual crowds of people instead of percentages. This or an answer like this I would have in mind that studnets come up with if they reflect this example. I think an answer to such a reflection is best placed in the interactive part of the course or in the study center meet ups.\n\n\n\n\n\n\n\n\n\nBe mindful of framing\n\n\n\nA standard we should strive for when reporting data is providing impartial information. For this we should think carefully about our framing and should perhaps provide both positive and negative frames.\n\n\nBut even if we achieve this, we should consider other things, like the ordering of the rows. Let us discuss this aspect in the next session together with your first steps in R."
  },
  {
    "objectID": "categorical_data_and_proportions.html#a-first-acquaintance-with-r-visualizing-infant-mortality-rates",
    "href": "categorical_data_and_proportions.html#a-first-acquaintance-with-r-visualizing-infant-mortality-rates",
    "title": "2  Categorical Data and Proportions",
    "section": "2.2 A first acquaintance with R: Visualizing infant mortality rates",
    "text": "2.2 A first acquaintance with R: Visualizing infant mortality rates\nWhile a table might be the medium of choice for displaying data it is often more powerful to convey information visually. The example of how imagining actual crowds might give us sometimes a more tangible picture of the same information, was one illustration of this.\nToday when we visualize data as one important tool of data exploration, the tool of choice is a computer and an appropriate language that enables us to tell the computer what to do.\nFor us in this course this will be the R language and now we start to learn the first steps in this language.\n\n2.2.1 Starting an quitting R\nWe assume that the computer you work with has a recent version of R installed. R will work with the most common operating systems such as Windows, OSX or Linux.66 Installing R yourself is not complicated. To install R yourself you need a computer where you have the privileges to install software and you need an internet connection. You get the newest version of R at the website https://cran.r-project.org/. A screenshot of the website is here \nWe will use R in two ways: First from the R command line and then also by working with Jupyter Notebooks.77 Another very powerful and popular program to work with R and R code is RStudio, which you can find here https://www.rstudio.com/. RStudio is a so called IDE, an integrated development environment. If you have access to a computer with internet connection and the permissions to install software yourself, feel free to experiment also with this tool. The basic version is free of charge. Again you need a computer where you have the privileges to install software and you need an internet connection.\nThe notebooks, which we already encountered in an example in the introduction, will not only allow to write R code and send this code to R for execution. Notebooks also allows you to store commands, to comment them and make them available as files for later use. This is especially useful, once you work on longer and more complicated tasks. It is then essential that you can reproduce what you did in the past days, that you can write easily readable comments and that you can collaborate in a team, where you can share your work with others. This circle of collaborators includes your future and past self.\nFor a start we just work with the R command line or the R-console, as it is called, introducing the use of R via the notebooks a bit later.\nYou start R by either typing R into the terminal or by clicking the R icon on your computer. The R console shows a prompt, a symbol that looks like this >. When you see the prompt in the R console, R is ready to receive commands.\nTo end your R session write quit() at the prompt > of the console. Congratulations. Now that you can start and quit R we are ready to go.\n\n\n\n\n\n\nSeitwerk: A remark on a demo.\n\n\n\n\n\nThis would be perhaps best shown in a brief video. Of course when producing the video it is important to think about which operating system the students will use, and the R version that they will have available. If this is open, so the demo for windows, mac and linux. It does only take marginally more time and effort. Maybe this whole intro is perfect for a video demo.\n\n\n\n\n\n2.2.2 First steps\nHere is an easy command you can send to R. Just try to type 1 + 1 at the prompt\n\n1 + 1\n\n[1] 2\n\n\nSure enough, R gives you the result of the addition, which is 2. But what is [1]? This is just a row label. If there were more outputs to your command, then they would be labelled [2], [3], [4], and more. We will go into this aspect of R’s output display later in more detail.\nSo R can do all the usual computations. For instance if you knew that in Germany in 1860 there were 270 infant death per 1000 life birth you could compute the mortality rate in a decimal format by dividing the counts by 1000, because the convention is to report mortality as cases per 1000 life briths. The R command for division is /. So by typing\n\n270/1000\n\n[1] 0.27\n\n\nyou will get the mortality rate 0.27 or 27 %.\nYou can do all the usual arithmetic operations, like with a calculator in R. For instance subtraction\n\n3-2\n\n[1] 1\n\n\nOr multiplication\n\n10*10\n\n[1] 100\n\n\nYou can raise a number to the power of another, like\n\n3^2\n\n[1] 9\n\n\nand of course you can combine all of these operations:\n\n(1+3)^2 - 5*4 + 12^3 - (13/2)\n\n[1] 1717.5\n\n\nThe comma is represented in R as a dot .. So the above output reads 1717and one half or 0.5.\n\n\n\n\n\n\nNow you try\n\n\n\nUse R to transform the Mortality numbers reported in percent in Table 2.1 and Table 2.2 in mortality rates, i.e. the (approximate) number of infant-deaths per 1000 life births.\n\n\nR needs a complete command to be able to execute it, when the return key is pressed. Lets see what happens, if a command is incomplete, like for instance:\n5*\nIn this case R will show the expression 5* followed by a + instead of showing a new prompt. This means that the expression is incomplete. When R shows + after entering a command instead of the output and a new prompt, it means that it expects more input. If we complete the expression, the expression can be evaluated and a new prompt is shown in the console.\nIf you type a command that R does not understand, you will be returned an error message. Errors are usually printed in red, and it instinctively might create a feeling of alarm. Don’t worry if you see an error message. It just is a way the computer tells you that he does not understand what you want him to do.\nFor instance, if you type 5%3 you will get an error message like this\n\n5%3\n\nError: <text>:1:2: unexpected input\n1: 5%3\n     ^\n\n\nSometimes it is obvious why a mistake occurred. In this case, that R just does not know what to do with the symbol %. It has no meaning in this context. Sometimes it is not so obvious what the error message actually means and what you might do about it.\nA useful strategy in this case is to type the error message into a search engine and see what you can find. The chance is very high that others encountered the same problem before you and got helpful advice how to fix it from other users on the internet. One site, which is particularly helpful for all kinds of questions related to R and R programming is https://stackoverflow.com/. Try it at the next opportunity.\nWith this knowledge we can already do a first example, by continuing our discussion on infant mortality data we started in this lecture. On the way we learn a few more things about R and the R language.\n\n\n2.2.3 Storing and reusing results\nWhen our operations become just a bit more complex than just typing in a simple arithmetic operation, it becomes useful if we can store answers and use these answers, which might be an intermediate result of some transformed data or something else. In R this problem is solved very easily. We assign the answer to a name we choose ourselves. Here is an example.\n\na <- 1+1\n\nThe symbol <- tells R pleas assign to the name a the result of the computation 1+1.88 The assignment operator is used so often that it is useful to type it using a keyboard shortcut instead of typing first <and then -. The same result can be achieved by pressing the ALTkey followed by the - key. \nNow see why we have said that the assignement has stored your result. Enter on your keyboard the name you have just chosen:\n\na\n\n[1] 2\n\n\nAnd you can use the stored value to do further computations with it, like\n\na^2\n\n[1] 4\n\n\nWhen you assign a new value to the old name a, the old value will be overwritten by the new value.\nWhat names should you use? You could uses actually anything but you have to follow a few rules. A name in R must for example not begin with a number, a dot . or an underscore _. So for example var_1, var.1, var1 and VAR1 and myVar1 are all allowed names but 1var, .var and _var1 are not\n\n\n2.2.4 A first data visualization\nWe showed the infant mortality rates of a group of European countries before in Table 2.1 and Table 2.2.\nHumans are very visual creatures. Thus using our visual system to explore data and absorb information in these data visualizations can be very powerful. To deploy their power, we must - however - follow some principles, which we will learn step by step over this course.\nAssume we would like to display the information in our tables in a so called bar chart. A bar chart would combine in a plot bars for each country in the table with the bar length proportional to the mortality rate. This will give us a visual impression how the countries differ in one view, which might be more informative as just looking at the numbers themselves in a table.\n\n2.2.4.1 Functions\nR is not just a calculator and data storage device. What makes R very powerful is that it comes equipped with many functions which we can use to do things with data, like for instance producing plots like a bar chart.\nFunctions in R have a name followed by parenthesis. In the very first step we typed for example quit() at the prompt. This is a function and by typing its name followed by the parenthesis, R knows that it has to close the program and shut down.\nFunctions can also have arguments, which we can assign certain values to. For example, R has a function which would round numbers. This function is called round(). It has also arguments. You need to tell R which numbers to round and the number of digits the rounding should consider.\n\nround( x = 2.4356789123456, digits = 2)\n\n[1] 2.44\n\n\nThe first argument in the function round is x. We can give x a value, which we assign by =. The second argument is called digits and we assign to it the value 2. The output is then, not very surprisingly, 2.44.\nNote that R is programmed such that we could also have typed:\n\nround(2.4356789123456, 2)\n\n[1] 2.44\n\n\nR would have known automatically that the first value is assigned to xand the second to digits.\nWe will encounter a lot of R functions during this course. We will also learn how to access R documentation to know for so many different functions, what is their name, which arguments they accept as input and how we can use them.\n\n\n2.2.4.2 Visualizing the infant mortality data\nR has a built in function for plotting bar charts, which is called barplot(). Let is make use of this function to show the infant mortality rates of 1860 as a bar chart. The arguments taken by R are the data. Then we can add additional arguments which determine details of the plot display and appearance.\nLet us first store the data in an object with the name mrfor mortality rates of 1860.\n\nmr_1860 <- c(0.237, 0.139, 0.136, 0.150, 0.260, 0.102, 0.174, 0.124)\n\nHere we see another important function of R which we will need all of the time, the c()function. This function concatenates values in a vector of values. So the output of the operation will be a vector \\((0.237, 0.139, 0.136, 0.150, 0.260, 0.102, 0.174, 0.124)\\) with the name mr_1860. Thus when we type\n\nmr_1860\n\n[1] 0.237 0.139 0.136 0.150 0.260 0.102 0.174 0.124\n\n\nR will print the whole vector as one object. This is why the counting label is [1] and not [8]. The c() function concatenates the number so a single object, a vector containing all eight numbers.99 In case you are worried about the technical term of a vector, don’t worry. We use this term here losely and not in a rigorous mathematical sense. You can think for the moment of a vector in R as a single object that can hold several data at once, like numbers, or characters. I avoided the term list in the text to avoid confusion with the list data structure which is a special data structure in R which we learn about in the course later.\nNow lets see what happens when we give mr_1860 as an argument to barplot.\n\nbarplot(mr_1860)\n\n\n\n\nWe see on the y axis the infant mortality rates from 0 to 0.25 and on the x axis a bar for each country with a length proportional to the infant mortality rate in this country.\nBut here it is difficult to connect the bars to the countries. So let us store the country names in another vector and call them ctr\n\nctr <- c(\"Austria\", \"Belgium\", \"Denmark\", \"France\", \n         \"Germany\", \"Norway\", \"Spain\", \"Sweden\")\n\nNote that the names of the countries had to be written between quotation marks \" \". This is the way to tell R that the sequence of letters are characters. Characters are a specific data type representing text. Now we have a vector of words, the country names. We can give the country names as an argument to barplot()like this:\n\nbarplot(mr_1860, names.arg = ctr)\n\n\n\n\nNot too bad. But some country names are missing. It seems that the width of the bars is not wide enough that R is able to print all names.\nIt would be more convenient to flip the chart around and interchange the x and the y axes here. This can be done by another argument to barplot(). This argument is called horiz and it assumes a logical value. A logical is another R data type which allows us to express whether something is true or false. Logical true and false values are expressed as TRUE and FALSE in R.\n\nbarplot(mr_1860, names.arg = ctr, horiz = TRUE)\n\n\n\n\nThis does not yet help much, because this flip of coordinates can only support a better display of the data if the country names are also printed horizontally.\nYou might guess it already: This can be controlled by another argument which is called in the case of this function las. If las gets value 1 we get what we want.\n\nbarplot(mr_1860, names.arg = ctr, horiz = TRUE, las = 1)\n\n\n\n\nNow we have visualized the information we had displayed in a table before. It is not yet perfect because the names of countries with longer names are cut off a bit. This could be fixed by additional function arguments, but let us not go too much in the details of the barplot()function at this stage. We will learn a lot about powerful visualization techniques in R as we go along.\n\n\n\n\n\n\nNow you try\n\n\n\nUse R to redo the barplot visualization we just did for the 1860 data for the 2020 data.\n\n\nBefore we close this first encounter with R and data visualization, let me point out an important aspect of bar charts. The visual impression is powerful and truthful, if we choose the origin of the bars carefully. It is usually the best idea to start the bars at zero. So we see clearly the relative lengths and the magnitude of differences in the context of the entire dataset.\nChanging the origin with not enough care can visually exaggerate the differences between countries. This is a manipulative visualization, which should be avoided but which is encountered often. So be mindful about the choice of origin in a bar chart.\nLet me show you what I mean by telling R, for example, to start the plot of the data for the 1880 data at \\(0.08\\) instead as of \\(0\\).\n\nbarplot(mr_1860, names.arg = ctr, horiz = TRUE, las = 1, \n        xlim = c(0.08, 0.275), xpd = F)\n\n\n\n\nDo you see that now the differences appear bigger? The choice of origin can have a big influence on the appearance of differences between the length of the bars. Always be mindful of this effect and reflect what happens if for some reason you have to choose a different origin for the bar chart than zero. Alberto Cairo, who is the author of an influential book on data visualization (Cairo 2016) recommends to always choose a “…logical and meaningful baseline”.\n\n\n\n\n\n\nBe mindful in choosing a logical and meaningful origin for barcharts\n\n\n\nWhen you compare porportions visually with a bar chart always think of choosing a logical and meaningful origin. In most cases this will be 0. If 0 is not possible, think about what would be a choice that gives a truthfull and not exaggerated display of differences.\n\n\nBefore we close this digression into visualization, let me briefly discuss another aspect of data presentation which you need to consider. The ordering of the rows in the data table, or in this case, the order of the bars in the barchart has to be carefully considered.\nIf you look at the bar chart we have produced, you see that the bars have an order corresponding to the alphabetical order of the countries, starting with A for Austria and ending with S for Sweden.\nNow consider we had ordered the data according to mortality rate like this:\n\n\nCode\nbarplot(rate_1860[order(-rate_1860$Mortality) , ]$Mortality, \n        names.arg = rate_1860[order(-rate_1860$Mortality) , ]$Country, horiz = TRUE, las = 1)\n\n\n\n\n\nNow the bar chart could suggests that the infant mortality rate is an important and meaningful way of comparing this particular group of countries.\nSuch ranking comparisons are very popular in the media but they can be misleading. They can be misleading because the differences could be there just by chance.\nThere could be also systematic differences between countries affecting infant mortality rates. For example, countries that are small with populations under 10 Million and that have very homogeneous populations and low birth rates tend to show lower infant mortality rates just because of these demographic features. So an ordering like the one presented in the graph might suggest a ranking that is in fact spurious and is not really substantial.\n\n\n\n\n\n\nBe mindful about order in displaying the data\n\n\n\nWhen you display proportions in a table or a bar chart be mindful of the ordering of data and avoid spurious rankings. Choose a particular ordering only if there is a meaningful and logical reason to do so."
  },
  {
    "objectID": "categorical_data_and_proportions.html#categorical-variables-causes-of-infant-mortality",
    "href": "categorical_data_and_proportions.html#categorical-variables-causes-of-infant-mortality",
    "title": "2  Categorical Data and Proportions",
    "section": "2.3 Categorical variables: Causes of infant mortality",
    "text": "2.3 Categorical variables: Causes of infant mortality\nWe have discussed binary data. These are data that can take two values, like death or alive, in the examples of infant mortality data we have studied so far. A generalization of binary variables are called categorical variables in statistics. Categorical variables are measures that can take two or more values, which can be either unordered, such as eye color, countries or study center locations at which JWL courses take place. They can also be ordered, like positions in a hierarchy.\nAn example of categorical data arises if we study the issue of infant mortality further and ask for the causes. Why do infants die in the first year of their life?\nHere are the causes that have been registered by the Global Burden of Disease Study in 2019 by the Institute for Health Metrics and Evaluation as well as the share of each cause in the overall cases.1010 See https://www.healthdata.org/gbd/2019\n\n\nCode\n# read data from JWL package\n\nlibrary(JWL)\ncauses <- infant_mortality_causes\n# order by share\ncauses_ordered <- causes[order(-causes$Share) , ]\n\ndat <- causes_ordered[, c(\"Entity\", \"Share\")]\nnames(dat) <- c(\"Cause\", \"Share\")\n\nlibrary(knitr)\nkable(dat, digits = 3, row.names = FALSE)\n\n\n\n\n\nCause\nShare\n\n\n\n\nPreterm birth\n0.211\n\n\nEncephalopathy due to birth asphyxia and trauma\n0.180\n\n\nLower respiratory infections\n0.161\n\n\nBirth defects\n0.128\n\n\nDiarrheal diseases\n0.092\n\n\nHeart anomalies\n0.048\n\n\nMalaria\n0.044\n\n\nSyphilis\n0.026\n\n\nMeningitis\n0.020\n\n\nWhooping cough\n0.016\n\n\nNutritional deficiencies\n0.015\n\n\nDigestive anomalies\n0.013\n\n\nSudden infant death syndrome\n0.009\n\n\nTuberculosis\n0.008\n\n\nMeasles\n0.006\n\n\nHIV/AIDS\n0.006\n\n\nDigestive diseases\n0.005\n\n\nTetanus\n0.005\n\n\nEncephalitis\n0.003\n\n\nAcute hepatitis\n0.002\n\n\nDiabetes and kidney diseases\n0.002\n\n\n\n\n\nCode\nwrite.csv(dat, file = \"tables/table_2_4_infant_mortality_causes.csv\", row.names = FALSE)\n\n\n\n\n\n\n\n\nNow you try\n\n\n\nUse R to visualize this table in a barchart. Don’t worry if some of the causes are cut off at the left of the graph. We will learn during the course how to better control the appearance of a visualization and control for details like this.\n\n\n\n\n\n\n\n\nThis is how an answer can look like.\n\n\n\n\n\nSince students have not yet learned subsetting, they need to use the table and retype the values and the causes manually. This is intended because it will familiarize them with the c() function, the difference between numerical and character data type and is an excellent opportunity to review what we did on simple R bar-charts. In the example cause below I use - of course - the convenience of subsetting\n\n\nCode\nbarplot(dat$Share, \n        names.arg = dat$Cause, horiz = TRUE, las = 1, cex.names = 0.3)\n\n\n\n\n\n\n\n\nIn the news but also in many publications you will often find proportions and how they add up to a total represented in so called pie charts. A pie chart for the causes of infant mortality visualizing our data will look like this\n\n\nCode\npie(dat$Share, labels = dat$Cause, radius = 1, cex = 0.5)\n\n\n\n\n\nNow compare this to a display of the same information using the bar chart. If you have done the exercise before correctly, it will look like this\n\n\nCode\nbarplot(dat$Share, \n        names.arg = dat$Cause, horiz = TRUE, las = 1, cex.names = 0.5)\n\n\n\n\n\nApart from some imperfections of displaying the labels in a easily readable way, why does the bar chart work much better for comparing the proportions of causes than the pie chart?\nThe reason is that the bar chart is supported better by by our visual perception capacity. In the case of the bar chart we have to compare lengths, which our visual system can do well. For decoding the pie we have to compare areas of slices or angles formed by the slices at the circle center. But our visual system does not work well for such tasks. It works even worse, if the display is a three dimensioal pie chart, as offered by various apps. In this case the pie would look like this:\n\n\nCode\nlibrary(plotrix)\npie3D(dat$Share, labels = dat$Cause, radius = 1, labelcex = 0.5)\n\n\n\n\n\nNow it is even worse, because our visual system now has to additionally decode perspective on top of area, something it is naturally also not good at.\nThere are ways to visually display data that work because they are naturally supported by our ability of visual perception and cognition, while others are not.\n\n\n\n\n\n\nDon’t use pie charts to visually compare proportions\n\n\n\nWhen you display proportions choose bar charts and avoid pie charts. Bar charts are naturally supported by the ability of our visual system to compare lengths, while pie charts require the comparison of areas and angles, a task our visual system is not so good at."
  },
  {
    "objectID": "categorical_data_and_proportions.html#compairing-pairs-of-proportions",
    "href": "categorical_data_and_proportions.html#compairing-pairs-of-proportions",
    "title": "2  Categorical Data and Proportions",
    "section": "2.4 Compairing pairs of proportions",
    "text": "2.4 Compairing pairs of proportions\nOften proportions or percentages are used to communicate risks by comparing pairs of proportions.\nWhen pairs of proportions are compared, we need to understand how such comparisons can be made in a meaningful way. Especially in the media it is popular to often run spectacular headlines of how specific behaviors affect your likelihood of developing a disease.\nMuch of the spectacle in the headlines is due to the exclusive reporting of relative risks. It is important to understand that such statements need to be put into context by also reporting baseline of absolute risk.\nLet me illustrate the issue using the example of consuming processed meat and the risk of developing bowel cancer.\nFrom epidemiological research it is known that the chance of a person of developing bowel cancer is based on factors such as meat consumption, the level of physical activity, the body weight or income.\nThe relative risk is the risk of developing bowel cancer in a group of people compared to another group of people with different behaviors, different physical conditions of different environments.\nFor instance when we compare meat eaters versus vegetarians, a statement about relative risk would be that the consumption of processed meat increases the risk of developing bowel cancer by 18 %. This sounds spectacular but it does not tell the full story.\nTo see this go back to our previous example of imagining crowds of people instead of percentages.\n\n\nCode\nwaffle(c(2, 8), rows = 2, use_glyph = \"male\", \n       colors = c(\"#FD6F6F\", \"#93FB98\"), glyph_size = 16, \n       equal = F, legend_pos = \"\")\n\n\n\n\n\nHere we have an absolute risk of two out of 10 persons developing bowel cancer. If the relative risk would increase by 50 % this would mean in terms of absolute risk that now we have\n\n\nCode\nwaffle(c(2, 1, 7), rows = 2, use_glyph = \"male\", \n       colors = c(\"#FD6F6F\", \"#3A9ABD\", \"#93FB98\"), glyph_size = 16, equal = F, legend_pos = \"\", size = 0.2)\n\n\n\n\n\nThe risk increases now to three out of 10.\n\n\n\n\n\n\nNow you try\n\n\n\nAssume the absolute risk is 4 out of 10 and the relative risk increase is 50 %. How many out of 10 are now at risk?\n\n\nThese examples illustrate that you need baseline or absolute risks as a vital information to understand what an 18 % increase in risk really means.\nGoing back to the example of processed meat consumption and bowel cancer risk, the estimated lifetime risk of developing bowel cancer is 5.6 %. Expressed as a relative frequency this is about 6 out of 100 or in a chart\n\n\nCode\nwaffle(c(6, 94), rows = 5, use_glyph = \"male\", \n       colors = c(\"#FD6F6F\", \"#93FB98\"), glyph_size = 8, \n       equal = F, legend_pos = \"\")\n\n\n\n\n\nThe estimated life time risk of developing bowel cancer if you eat 50 g of processed meat per day increases your relative risk by 18 %. At this heigthened risk level the new absolute risk is now 6.6 % or about 7 out of 100\n\n\nCode\nwaffle(c(6, 1, 93), rows = 5, use_glyph = \"male\", \n       colors = c(\"#FD6F6F\", \"#3A9ABD\", \"#93FB98\"), glyph_size = 8, \n       equal = F, legend_pos = \"\")\n\n\n\n\n\nIn the research literature proportions are often expressed by the odds ratio. This ratio expresses the chance of an event happening relative to the chance of an event not happening. In the example of processed meat and bowel cancer this would be \\(6/94\\), because 6 out of hundered people develop bowel cancer in their life time and 94 out of hundred do not. While odds are very common in the research literture they are not a very intuitive way to communicate the comparison of proportions. Spiegelhalter, from whom I took this example therefore recommends not to use odds ratios outside a scientific context, since it easily invites misunderstanding."
  },
  {
    "objectID": "categorical_data_and_proportions.html#activities-in-the-study-center",
    "href": "categorical_data_and_proportions.html#activities-in-the-study-center",
    "title": "2  Categorical Data and Proportions",
    "section": "2.5 Activities in the study center",
    "text": "2.5 Activities in the study center\n\n2.5.1 The story of infant mortality around the globe\nFor this activity we continue to look into the issue of infant mortality around the globe by working with a Jupyter notebook. To work on this assignment, please open the notebook infant_mortality_global.ipynb with the jupyter notebook. The notebook contains some text and some code which you can interactively execute from the notebook, as we already did it in the assignments in the Introduction, when we looked at the share of poverty in various countries. In this notebook we continue to dive deeper into the story of infant mortality around the globe. The things you learn when you work through this assignment will probably surprise you."
  },
  {
    "objectID": "categorical_data_and_proportions.html#a-data-collection-exercise-for-the-next-unit",
    "href": "categorical_data_and_proportions.html#a-data-collection-exercise-for-the-next-unit",
    "title": "2  Categorical Data and Proportions",
    "section": "2.6 A data collection exercise for the next unit",
    "text": "2.6 A data collection exercise for the next unit\nMaybe handedness score?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAntony, Volk, and Atkinson Jeremy. 2013. “Infant and Child Death in the Human Environment of Evolutionary Adaptation.” Evolution and Human Behavior 34: 182–92.\n\n\nCairo, Alberto. 2016. The Truthful Art: Data, Charts, and Maps for Communication. New Riders.\n\n\nRoser, Max. 2019. “Child Mortality Is an Everyday Tragedy of Enormous Scale That Rarely Makes the Headlines.” https://ourworldindata.org/child-mortality-everyday-tragedy-no-headlines.\n\n\nSmil, Vaclav. 2020. Numbers Don’t Lie: 71 Things You Need to Know about the World. Penguin Books.\n\n\nSpiegelhalter, David. 2019. The Art of Statistcis: Learning from Data. Pelican Books.\n\n\nWickham, Hadley. 2014. “Tidy Data.” Journal of Statistical Software 59 (10): 1–23. https://doi.org/10.18637/jss.v059.i10."
  },
  {
    "objectID": "summarizing_and_communicating_lots_of_data.html",
    "href": "summarizing_and_communicating_lots_of_data.html",
    "title": "3  Summarizing and communicating lots of data",
    "section": "",
    "text": "When we analyze data, we usually have to look at lots of them. An example might be income data gained from household surveys. Such a survey will contain a huge number of data points, in the order of magnitude of ten thousands of data. These data need to be summarized, to understand their main characteristics.\nIn this unit you will learn the most important tools for summarizing and communicating lost of data. You are going to learn the principles how data summaries are constructed, what are the properties of these summaries and what needs to be carefully considered.\nWhen we need to deal with really large data sets, and most modern data sets are too large to be handled manually, we will need the computer. We already did some first steps in R. In this unit we will build on these first steps but enlarge them in a way that will enable you to deal and manipulate large datasets on the computer."
  },
  {
    "objectID": "summarizing_and_communicating_lots_of_data.html#understanding-variation-in-a-single-variable-using-histograms",
    "href": "summarizing_and_communicating_lots_of_data.html#understanding-variation-in-a-single-variable-using-histograms",
    "title": "3  Summarizing and communicating lots of data",
    "section": "3.1 Understanding variation in a single variable using histograms",
    "text": "3.1 Understanding variation in a single variable using histograms\n\n3.1.1 Constructing a Histogram\nTo summarize data, statisticians often use a graph which is called a histogram. In this section we will discuss all you have to know about histograms and how to use them. Let us start by an example, where we have about 100 data points, which is a lot but not that large that we can not handle them by hand.\nThe data we want to look at come from measurements of the annual flow of the river Nile at Aswan (formerly) Assuan in Egypt from 1871 to 1970. The units of these measurement in which the annual flow is recorded are 100 millions of cubic meters, i.e. \\(10^8 m^3\\).\nThis is one of the data sets that is bundled with the R distribution and is available to all users of R. They are stored in an R object called Nile.11 When you type data() at the R console, you get a list of all datasets that are available with the current distribution of R.\nThis is how the data look like, when we print them to the R console using the R command print(). The R function options() with the argument widthjust controls how the numbers are printed. Here I made sure that they will fit in the width of the page.\n\noptions(width = 70)\nprint(Nile)\n\nTime Series:\nStart = 1871 \nEnd = 1970 \nFrequency = 1 \n  [1] 1120 1160  963 1210 1160 1160  813 1230 1370 1140  995  935 1110\n [14]  994 1020  960 1180  799  958 1140 1100 1210 1150 1250 1260 1220\n [27] 1030 1100  774  840  874  694  940  833  701  916  692 1020 1050\n [40]  969  831  726  456  824  702 1120 1100  832  764  821  768  845\n [53]  864  862  698  845  744  796 1040  759  781  865  845  944  984\n [66]  897  822 1010  771  676  649  846  812  742  801 1040  860  874\n [79]  848  890  744  749  838 1050  918  986  797  923  975  815 1020\n [92]  906  901 1170  912  746  919  718  714  740\n\n\nWe start the construction of a histogram by choosing for the horizontal axes ranges of numerical values - in our case of the river flow data - which are called bins or classes. There is no fixed rule as to how to choose the size of these ranges. These ranges should neither be too fine, nor too coarse. While there are lists of mechanical rules, which you can for example find on Wikipedia2, it is usually best to use your domain knowledge and some experimentation to find out the bin size that works best for your data.2 See https://en.wikipedia.org/wiki/Histogram#Number_of_bins_and_width\nFor this example, assume we had chosen a bin size of 1003. When you study the list, you will find that the lowest value is at 456 while the highest value is at 1370. This is already quite tedious to find out by eyeballing the numbers with the small number of values we have chosen for this example. It is impossible to do for really large data sets.3 Note that this will mean \\(100\\times 10^8 m^3\\) per year.\nNow lets make a distribution table like this:\n\n\n\nFlow-bin\nFrequency\n\n\n\n\n400 - 500\n1\n\n\n500 - 600\n0\n\n\n600 - 700\n5\n\n\n700 - 800\n20\n\n\n800 - 900\n25\n\n\n900 - 1000\n19\n\n\n1000 - 1100\n12\n\n\n1100 - 1200\n11\n\n\n1200 - 1300\n6\n\n\n1300 - 1400\n1\n\n\n\nIn the column Flow-bin we have recorded the bins in steps of 100 and in the right column, Frequency, we have recorded the count of values that are in this bin.\nWhen we make such a tabulation we have to agree on an endpoint convention. This is important, since when a flow value would for instance be measured as exactly 500, in which bin should it be counted: 400-500 or 500-600? You, the constructor of the histogram, has to take this decision. Let us agree on the convention that when a value falls exactly at the endpoint of the bin, we put it in the next bin. In practice you will usually do a histogram by computer. The code of the computer program has to specify an endpoint convention, so the computer knows what to do when a value coincides with an endpoint.\nOn the Frequency axes you put the frequency scale: Counts of values. Then for each bin, you plot a bar, which has the width of the bin and the height of the frequency.\nDo this for all the bins you have tabulated and you are ready.\nThe histogram provides a certain aggregation of the data because it sorts the 100 data points into 10 bins, in our example. While loosing some local information on individual data points the global information conveyed by the summary gives us a pretty good idea of the overall pattern of variation on the Nile river flow data.\nWe can see, for instance, that the most frequent flow is between 800 and 900 and that the variation is fairly symmetric around this bin. In the extremes this most frequent value can half or almost double, so there is quite some spread in the data.\n\n\n\nConstructing the river flow histogram\n\n\nIf we had just plotted all individual data points, we also got a picture, though you probably agree that it is not particularly useful.\n\n\nCode\nplot(as.numeric(Nile), xlab = \"Observation\", ylab = \"Annual Flow\", pch = 16)\n\n\n\n\n\nHistograms are such a common tool in statistics to explore the variation in one variable and the shape, how it is roughly distributed that every statistical software has functions to produce histograms. In R, the language we use in this course, there is also such a function. The function name is called hist() and it takes the data as an argument. This is the second graphic function of R you encounter in this course after we played with the barplot()function in the last lecture.\nTo produce a histogram from the river flow data, we type at the console\n\nhist(Nile)\n\n\n\n\n\n\n\n\n\n\nNow you try\n\n\n\nLet us check your understanding of histograms by a little quiz now. The histogram below shows the distribution of the final score in a certain class.\n\nWhich block represents the people who scored between 60 and 80?\nTen percent scored between 20 and 40 about what percentage scored between 40 and 60?\nAbout what percentage scored over 60?\n\n\n\n\nFinal Score\n\n\n\n\n\n\n3.1.2 The density scale: Absolute versus relative frequency\nSometimes it might be useful, to choose a different scale for the y axes of your histogram. Instead of absolute frequencies (or counts) it might be useful to show relative frequencies, the proportion of occurrences in each bin. The type of scale you choose will depend on what kind of comparisons you want to emphasize about your data.\nLet us look at this issue by an example. The numbers we want to look at report energy consumption per capita in kwh per person per year for different countries around the world.4 The energy numbers refer to primary energy – the energy input before the transformation to forms of energy for end-use (such as electricity or petrol for transport).4 A kilowatt-hour, known as Kwh is a way to measure how much energy is used. A kilowatt-hour is the amount of energy used if a 100 watt appliance is kept running for an hour. For instance, if you turned on a 100 watt bulb for one hour you are using a kilowatt-hour of energy. What’s the difference between kilowatt vs. kilowatt-hour? A kilowatt is 1,000 watts, which is a measure of power. A kilowatt-hour is a measure of the amount of energy a certain machine needs to run for one hour. So, if you have a 1,000 watt drill, it takes 1,000 watts (or one kW) to make it work. If you run that drill for one hour, you’ll have used up one kilowatt of energy for that hour, or one kWh. Obviously, every appliance will use a different amount of power. Here are some of the usages for some items in a home: 50″ LED Television: around 0.016 kWh per hour, electric water heater: 380-500 kWh per month\nLet us look at the year 2019.\n\n\nCode\nlibrary(JWL)\nlibrary(ggplot2)\n\ndat <- with(energy_consumption_per_capita, energy_consumption_per_capita[Year == 2019, ])\n\nhist_info <- hist(dat$Cons, plot = FALSE)         # Store output of hist function\nhist_info$density <- hist_info$counts /    # Compute density values\n  sum(hist_info$counts) * 100\nplot(hist_info, freq = FALSE, xlab = \"Primary energy consumption in kilowatt-hours per person per year.\", ylab = \"Percent\", main = \"Primary energy Consuption per Capita 2019\")              # Plot histogram with percentages\n\n\n\n\n\nIn this histogram you see the distribution of per capita primary energy consumption for the year 2019 for countries around the globe. But now the y axes shows relative frequencies instead of counts.\nFor example, you see from the graph that roughly 55 % of countries have a primary energy consumption smaller that 20.000 kilowatt hours per person in this year. The next larger bucket contains already roughly half or 24 %. The biggest buckets are then a very small fraction of countries in the world. This means that there is a relatively small share of counrties, around 20 %, which have a large primary energy consumption per capita. One says in the language of statistics that the distribution of per capita primary energy consumption is skewed.\nWhen you have a histogram with a density or relative frequency scale, the total area sums to 100 (or to 1 depending on how you express the percentages, i.e. whether you express them as 10 % or as 0.1.).\n\n\n3.1.3 Exercises: Now you try\n\nA histogram of monthly wages for part-time employees is shown below (densities are marked in parenthesis). Nobody earned more than $1000 a month. The block over the class interval from 200 to 300 is missing. How tall must it be?\n\n 2. Three people plot histograms for the weights of subjects in a study, using the density scale. Only one is right. Which one and why?\n\n\nCode\n#| echo = false\n\nlibrary(JWL)\n\ndat <- height_weight\n\ndata <- dat[dat$state == 1 & dat$sex == 1 & dat$age > 18, ]\n\nhist_inf <- hist(data$height, plot = FALSE)         # Store output of hist function\nhist_inf$density <- hist_inf$counts /    # Compute density values\n  sum(hist_inf$counts) * 100\n\npng(file=\"pictures/hight_version1.png\")\nplot(hist_inf, freq = FALSE, xlab = \" \", ylab = \" \", main = \" \")\n\n\npng(file=\"pictures/hight_version2.png\")\nplot(hist_inf, freq = FALSE, xlab = \"hight (cm) \", ylab = \"Percent per 5 cm \", main = \" \")\n\n\npng(file=\"pictures/hight_version3.png\")\nplot(hist_inf, freq = FALSE, xlab = \"hight (cm) \", ylab = \"5 cm per percent\", main = \" \")\n\n\n\n\n\n\n\n\n\n(a) Version 1\n\n\n\n\n\n\n\n(b) Version 2\n\n\n\n\n\n\n\n(c) Version 3\n\n\n\n\nFigure 3.1: Three versions of a hight histogram of males over age 18\n\n\n\nAn investigator draws a histogram for some height data, using the metric system. She is working in centimeters (cm). The vertical axes shows density and the top of the vertical axes is 10 percent per cem. Now she wants to convert to millimeter (mm). There are 10 millimeter to the centimeter. On the horizontal axis, she has to change 175 cm to ? mm, 200 cam to ? mm. On the vertical axis she has to change 10 percent per cm to ? percent per mm, and 5 percent per cm to ? percent per mm.\nIn a Public Health Service study, a histogram was plotted showing the number of cigarettes per day smoked by each subject (male current smokers), as shown in the histogram below. The density is marked in parentheses. The class interval include the right endpoint, not the left.\n\nThe percentage who smoked 10 cigarettes or less per day is around:\n1.5% 15% 30% 50%\nThe percentage who smoked more than a pack a day, but not more than 2 packs, is around\n1.5% 15 % 30% 50% (There are 20 cigarettes in a pack)\nThe percentage who smoked more than a pack a day is around\n1.5%, 15%, 30%, 50%\nThe percent who smoked more than 3 packs a day is around\n0.25 of 1%, 0.5 of 1%, 10 %\nThe percent who smoked 15 cigarettes per day is around\n0.35 of 1%, 0.5 of 1%, 1.5%, 3.5%, 10%\n\n\n\n\n\nFigure 3.2: Number of cigarettes\n\n\n\n\n3.1.4 Best practices for histograms\nWhen you summarize lots of data by a histogram there are some things you should consider carefully. Let us go through the most important best practice principles for histograms.\n\n3.1.4.1 Bin size\nWhen doing exploratory data work it is usually a good idea not to look at a single histogram but at several histograms of the same data by changing the bin size. There is no clear rule about the optimal bin size. It often depends on context and field knowledge.\nIf the bins are to fine, then the data will be be very noisy and give no overview because they show too many individual points. On the other hand if the bins are too wide, they will not show you the overall variability in the data very well and you fail to get a good idea about the distribution.\nLet us illustrate this point using the river flow data of the Nile.\nIn the first case we have chosen 100 bins, which is too fine. There is almost one bar for every single data point. In this way we have a lot of spurious peaks and throughs and can not see the variation pattern in the data very clearly\n\n\nCode\nhist(Nile, breaks = seq(min(Nile), max(Nile), length.out = 100))\n\n\n\n\n\nNow here we have the other extreme, lets assume we have only 3 bins. This would give us a pattern like this.\n\n\nCode\nhist(Nile, breaks = seq(min(Nile), max(Nile), length.out = 3))\n\n\n\n\n\nHere the histogram is too coarse and we do not see the variation pattern either.\nThe computer usually has a built in rule of thumb for the histgram which will work well in most of the cases. Still for individual datasets it is sometimes better to choose a different bin size that more adequately mirrors the variation in the data.\n\n\n3.1.4.2 Choose boundaries that can be clearly interpreted\nTick marks and labels should fall on the bin boundaries. As in the examples discussed so far, they need not be there for every tick but it is enough if they are there between every few bars. Bin labels should also have not many significant digits, so they are easy to read. So bin sized which divide 10 and 20 evenly are easier to read than bin sizes that do not. So always take caution not to arbitrarily split bin sizes. Otherwise you can end up with off bin boundaries.\nFor example, if we just took the maximum and the minimum of the Nile river flow data and arbitrarily divided them into 7 bins, we would get the difficult to read bin boundaries\n\n\nCode\nseq(min(Nile), max(Nile), length.out = 7)\n\n\n[1]  456.0000  608.3333  760.6667  913.0000 1065.3333 1217.6667\n[7] 1370.0000\n\n\ninstead of the more easily readable boundaries\n\n\nCode\nseq(400,1200,100)\n\n\n[1]  400  500  600  700  800  900 1000 1100 1200\n\n\n\n\n3.1.4.3 What’s the difference between a histogram and a bar chart?\nA histogram depicts the frequency distribution of a continuous, quantitative variable, such as height, weight, time, energy consumption etc. These are variables that can take on any value and these values can be ordered from smallest to highest.\nWhen we have a categorical variable, like we encountered them in section 2, we need to use a bar chart. The bars of the bar chart typically will have a small gap between the bars, emphasizing the discrete nature of the variable. The categories in a bar chart usually have no natural ordering. As we discussed in section 2, we have even to be conscious how we display the categories to avoid suggesting an order that is in fact not there in the data."
  },
  {
    "objectID": "summarizing_and_communicating_lots_of_data.html#sec-moreR",
    "href": "summarizing_and_communicating_lots_of_data.html#sec-moreR",
    "title": "3  Summarizing and communicating lots of data",
    "section": "3.2 Next steps in R: Reading Data, understanding R objects and selecting and modifying values",
    "text": "3.2 Next steps in R: Reading Data, understanding R objects and selecting and modifying values\nBefore we go on with learning the tools to summarize and communicate lots of data let us gain more skills for handling the tool that will actually enable you to handle large data sets yourself by making use of R. Building on what we learned in the last unit, lets now push your knowledge of R bit further.\n\n3.2.1 Reading data in R\nBefore we can do anything with data, we need first to learn how to load data into R and how to save them. We will discuss now how to do this for the case of comma separated text files or so called csv files. R provides functions for reading and writing from almost any other format, like data stored in Excel files and many more data formats that are used today. Since in all those different formats are read by R following the same principles as in the csv case, it is sufficient if we discuss here the the case of csv files only.\nWe have discussed a data set of per capita primary energy use in countries around the globe to produce a histogram of these data for the year 2019. How did I get these data into R?\nFirst of all I could access these data because helpful people at Oxford University in the UK who maintain and run the website “Our world in data”, which we have encountered before, store these data on their website. In the concrete case of the energy data, they can currently be found at https://ourworldindata.org/grapher/per-capita-energy-use where you can download the datafile from the webpage and save it locally somewhere on your computer.\nI have taken a screenshot here\n\n\n\nOur World in Data website energy\n\n\nIn the lower right corner you see a box called Data and a download button. This button allows you to download the dataset to your machine. The file is called per-capita-energy-use.csv. From the extension of the file csv, you can see that it is a comma separated text file. This is a plain text file following certain formatting rules. In particular individual data points are separated by a comma55 The standard format for csv can be looked up here https://www.ietf.org/rfc/rfc4180.txt. Despite this standardization it can occur that different files use different conventions for the notation of the decimal comma sign. In the most common specification this symbols is a dot (.) and in others it is a comma (,). For such speical cases R provides special functions, which we will explain in the text.\nI have stored the file in a sub-folder to the directory in which I am writing these lecture notes. If you decide to download this file, you will save it somewhere on your machine where you find it appropriate. Perhaps you have a folder for this course and in this folder you have a sub-folder where you store all the data sets we are using in the course.\nTo read a csv file, R provides the function read.csv(). If the csv file comes with a European instead of an US decimal format (, instead of . for the decimal sign.) you need to use the function read.csv2(). Please check out the documentation of these functions by typing ?read.csv at the R prompt.\nIn the simplest form you read the data and store them in an object you can work with in R. How to store data in an R object, we have already learned in the previous lecture. You invent a name and assign the values to this name using the assignment operator <-.\nLet’s call the object in which we save our data energy_consumption, then by calling the function read.csv() with the path to your file as an argument will read the data from your local folder and store them in the object we have created. This allows us to refer to the data for doing further computations.\n\nenergy_consumption <- read.csv(\"data/energy_use_per_capita/per-capita-energy-use.csv\")\n\nThe function needs as an argument the file name. If the file is in a sub-folder of the current directory you need to also specify the path. To specify the correct path to the file you need to know in which part of your directory tree you are currently working.\nIn my case I am working in the project folder for my lecture notes, which has a sub-folder called data. The data sub-folder has a further sub-folder called energy_use_per_capita in my case and thus I specify the path relative to this location.\nTo find out what is your current R working directory, R provides the function getwd(). If I type this in my case, I will get\n\ngetwd()\n\n[1] \"/home/martinsummer/R/Statistics_JWL\"\n\n\nthe path of my project folder for this lecture notes. So if I type the string \"data/energy_use_per_capita/per-capita-energy-use.csv\" this specifies the path relative to my working directory.\nIf you read the file on your computer, you need to specify the path appropriately from where you are working in R at the moment to where you have stored the csv file.\nNow read.csv() has many additional arguments, which provide you with lots of flexibility. I encourage you to check it out and play with it using the help function and the examples given therein by typing ?read.csv at the prompt.\nWe have now read the primary energy consumption data and written it to the R-object energy_consumption. Lets inspect the object a bit to see what we’ve got.\nI use the function head() with the parameter value n = 10. This will show me the first 10 rows of the data-file. So the value I give to the argument n contros how many rows will be displayed.\n\noptions(width = 120)\nhead(energy_consumption, n = 10)\n\n        Entity Code Year Primary.energy.consumption.per.capita..kWh.person.\n1  Afghanistan  AFG 1980                                           583.2944\n2  Afghanistan  AFG 1981                                           666.3782\n3  Afghanistan  AFG 1982                                           725.6599\n4  Afghanistan  AFG 1983                                           912.1396\n5  Afghanistan  AFG 1984                                           941.3926\n6  Afghanistan  AFG 1985                                           939.6124\n7  Afghanistan  AFG 1986                                           976.6691\n8  Afghanistan  AFG 1987                                          1592.7023\n9  Afghanistan  AFG 1988                                          2805.6096\n10 Afghanistan  AFG 1989                                          2700.4739\n\n\nThis gives you an idea what the data look like. There are four variables, called Entity, Code, Year and Primary.energy.consumption.per.capita..kWh.person. The last variable name is very informative but also very long and unpractical. We will learn how to change variable names soon. Because of the long name, I had to use the function options() before heads() to tell R to use a sufficiently wide display. Don’t worry for this detail at the moment.\n\n\n3.2.2 R objects\nThe most basic type of R objects are atomic vectors. Objects in R are built from atomic vectors.\nThe energy consumption data-file we have just loaded is an example of such a more complex structure built from atomic vectors. We have already encountered a few of those in our previous lecture.\n\n3.2.2.1 Atomic vectors\nAn atomic vector is just a simple vector of data. For example remember when we typed the infant mortality data for eight European countries for 1860 we typed\n\nmr_1860 <- c(0.237, 0.139, 0.136, 0.150, 0.260, 0.102, 0.174, 0.124)\n\nIn this case mr_1860 is an atomic vector.\nR has a function, which allows you to check whether an object is an atomic vector or not. This function is called is.vector(). It takes the object name as an argument and returns TRUE if the object is an atomic vector and FALSE if it is not.\nFor example:\n\nis.vector(mr_1860)\n\n[1] TRUE\n\n\ndoes indeed return TRUE.\nEach atomic vector stores values in a one-dimensional vector, and each atomic vector can only store one type of data. The length of the atomic vector can be determined by the function length() This function takes an R object, which is an atomic vector, as an argument and returns the number of elements in this vector. Here is the example of the die\n\nlength(mr_1860)\n\n[1] 8\n\n\nwhich is 8 as it should be. An atomic vector could also have only one element, in which case lenght()would return 1.\n\n\n3.2.2.2 Data types\nNow altogether R has implemented six basic types of atomic vectors:\n\ndouble\nintegers\ncharacters\nlogical\ncomplex\nraw\n\nWe will not encounter complex and raw data-types in this course, so let us skip those and discuss only the first 4 types, double, integer, character and logical.\nIf yo u go back to our energy consumption data and look at the first three lines\n\n\nCode\noptions(width = 120)\nhead(energy_consumption, n=3)\n\n\n       Entity Code Year Primary.energy.consumption.per.capita..kWh.person.\n1 Afghanistan  AFG 1980                                           583.2944\n2 Afghanistan  AFG 1981                                           666.3782\n3 Afghanistan  AFG 1982                                           725.6599\n\n\nyou will see the different variables in the object energy_consumption. Note that I had to fudge a bit with the display because of the unwieldy and long name of the last variable. We are soon going to fix this.\nThe variables Entity and Code are both of type character. A character vector stores strings of text, which have to be put between quotation marks \"\". Strings are the individual elements of a character vector.\nNote that a string can be more than just letters. If you type, for instance the number 1 with quotation marks, like \"1\" R would interpret the value as a string not as a number. Sometimes one can get confused in R because both objects and characters appear as text in R code. Object names are without quotation marks strings always are between quotation marks.\nCharacter is the natural data type for country names - here “Afghanistan” and the international abbreviation “AFG” also called an ISO-country code66 ISO is the short name for International Organization for Standardization. International Organization for Standardization came into existence in the year 1946 in London. This organization was formed after a delegation of 65 members from 25 countries, met to discuss the future of International Standardization. In 1947, ISO was officially formed with 67 technical committees consisting of a group of experts focusing on a specific subject. ISO founders decided to give it an acronym ISO, which was based on the Greek word ‘isos’, which means ‘equal’.\nThe variable Year encodes the year of a particular record or observation. Its type is integer, since years are integer values like 1980 or 2022. If yo want to specify a number explicitly as integer in R you have to type it as, say, 1980L, the number followed without space by a big L.\nThe variable with the very long name Primary.energy.consumption.per.capita..kWh.person. is of type double. This is the data type in R for encoding numbers that are decimal fractions, like 12.451\nNow why should we care for distinguishing integers from doubles? This has to do with the way a computer does computations. Sometimes a difference in precision can have surprising effects.\nIn your computer 64bits of memory7 are allocated for each double in an R program. While this allows for a very precise representation of numbers not all numbers can be exactly represented with 64-bits. The famous candidates are \\(\\pi\\), which has an infinite sequence of digits and must therefore be rounded by the computer. Usually the rounding error introduced into your computations will go unnoticed but sometimes surprises can occur.7 A bit is a binary digit, the smallest increment of data on a computer. A bit can hold only one of two values: 0 or 1, corresponding to the electrical values of off or on, respectively. So 64 bits are sequences of 0 or 1 with a length of 64\nTake for instance:\n\nsqrt(2)^2 - 2\n\n[1] 4.440892e-16\n\n\nWhy is that? The square root of 2 can not be expresses precisely because, as already the old Greeks knew, it is not a rational number.88 Let me invite you to a short digression into the history of science and the history of ideas. The discovery that \\(\\sqrt{2}\\) can not be rational was a shock discovery to the ancient Greeks. The Greek mathematician Pythagoras and his followers were fascinated by and devoted to whole numbers. They detected the fundamental role played by ratios of whole numbers for musical harmony. For example dividing a vibrating string in two half raises the pitch by an octave, dividing the string in three raises the pitch by one fifths and so on. This discovery gave them the clue that the physical world as a whole might have an underlying mathematical structure governed by whole-number patterns. It was thus quite a shock when they found out that one of their foundational discoveries the Pythagorean theorem logically implied that there were ratios of lengths that were incommensurable, that is, not measurable as integer multiples of the same unit. The ratio between such lengths is therefore not a ratio of whole numbers. This is why the Greeks called these numbers irrational. Some of you will remember from school that the Pythagorean theorem says that in a right angled triangle with lengths \\(a\\), \\(b\\) and \\(c\\), where the sides with length \\(a\\) and \\(b\\) from a right angle must fulfill the equation \\(a^2 + b^2 = c^2\\) or expressed in a picture  The incommensurable lengths disovered by one member of the pythagorean school was the side and the diagonal of the unit square. By the Pythagorean theorem in a square with side length of 1 it must be the case that \\(\\text{(lenght of diagonal)}^2 = 1 + 1 = 2\\). Thus the length of the diagonal must be \\(\\sqrt{2}\\).  Hence if the diagonal and side are in the ratio \\(m/n\\) (where \\(m\\) and \\(n\\) can be assumed to have no common divisor), we have \\[\\begin{equation}\nm^2/n^2 = 2\n\\end{equation}\\] thus \\[\\begin{equation}\nm^2 = 2 n^2\n\\end{equation}\\] This equation implies that \\(m^2\\) must be an even number. So \\(m\\) must be even too, say \\(m = 2 p\\). But if \\[\\begin{equation}\nm = 2 p\n\\end{equation}\\] then we have \\[\\begin{equation}\n2 n^2 = m^2 = 4 p^2\n\\end{equation}\\] hence \\[\\begin{equation}\nn^2 = 2 p^2\n\\end{equation}\\] which similarly implies that \\(n\\) is even. But we began the chain of deductions by the assumption that \\(m\\) and \\(n\\) have no common divisor. So if both \\(m\\) and \\(n\\) were even they would have a common divisor, namely 2. We have arrived at a contradiction. This means the length of the diagonal of the unit square can not be a rational number. Legend has it that th first Pythagorean to make the result public was drowned at sea. But even if the Pythagoreans could not accept that \\(\\sqrt{2}\\) was a number, no one could deny that it was the length of the diagonal of the unit square.\nAnd you have a small rounding error. Let me explain to those of you who are puzzled by the meaning of this output. R displays the result of its computation in scientific notation. 4.440892e-16 means \\(4.44089 \\times 10^{-16}\\).\nFor those of you who forgot how exponential notation works, let me remind you that we write \\(10^{-1}\\) for \\(1/10\\) and \\(10^{-2}\\) means \\(1/10^2\\) or \\(1/100\\). Thus \\(10^{-16}\\) means \\(1/10.000.000.000.000.000\\), a very small number but still different from 0. This is the error introduced by rounding \\(\\sqrt{2}\\). Such errors are called floating point errors in computer science lingo and computing with such numbers is called floating-point-arithmetic.\nWith integers floating point errors are avoided, but for many applications this is not an option. Luckily for most cases floating-point arithmetic provides sufficient precision for most of the applications we encounter in practice.\nThe last data type in the list, we want to discuss here, are: Logicals. Logical vectors store TRUE and FALSE; logical values. They are extremely useful for doing comparisons and - as we will see shortly - also for selecting values from a data set.\nHow logical data types work can best be understood by an example. If you type, for instance:\n\n0 > 1\n\n[1] FALSE\n\n\nR tells you that this statement is false, by printing the logical value FALSE as an output.\nWhenever you type TRUE of FALSE without quotation marks, R will treat the input as logical data. Note, as an aside, if you typed \"TRUE\"and \"FALSE\" in quotation marks, R would treat this input as a string co characters, a different data type. When communicating with a computer, you need to be very precise or the machine will not understand what you want to tell it do.\nFor instance, the following statement yields:\n\n\nCode\n#| code-fold: false\nlogic <- c(TRUE, FALSE, TRUE)\nlogic\n\n\n[1]  TRUE FALSE  TRUE\n\n\n\n\n3.2.2.3 Attributes\nOne important R-fact which you need to know about atomic vectors is that atomic vectors can have attributes. Attributes won’t affect the values of an object but can hold and store object metadata.\nNormally we do not look at these metadata, but many R functions check for attributes and then do special things with the object depending on these attributes. Attributes can be checked with the function attributes() using an R object as an argument. This will show you all the attributes that are attached to an R object.\nThe most common attributes for atomic vectors as well as R objects built from atomic vectors are names, dimensions and classes. Each of these attributes has its own helper function that you can use to also assign attributes to the object. For what we need now we discuss names and dimensions and discuss classes, which is a more advanced topic later.\nLet us look how this works with the enegrgy_consumptiondata and check whether they have a names attribute:\n\nnames(energy_consumption)\n\n[1] \"Entity\"                                             \"Code\"                                              \n[3] \"Year\"                                               \"Primary.energy.consumption.per.capita..kWh.person.\"\n\n\nWe can now see the variable names. We can use the function names()also as a helper function to assign other names to our variables. This is a tool that could help us to get rid of the very long and unwieldy name \"Primary.energy.consumption.per.capita..kWh.person.\". For example:\n\nnames(energy_consumption) <- c(\"Entity\", \"Code\", \"Year\", \"Cons\")\n\nwill overwrite the name attribute by this new vector of names. When you now look for the names attribute, you will see\n\n\nCode\nnames(energy_consumption)\n\n\n[1] \"Entity\" \"Code\"   \"Year\"   \"Cons\"  \n\n\nOne very important attribute, we will encounter all the time is dimension, with the helper function dim(). For example we can look at our data object energy_consumption again to get:\n\n\nCode\ndim(energy_consumption)\n\n\n[1] 10215     4\n\n\nwhich returns two numbers, which mean that the object has 10215 rows and 4 columns.\n\n\n3.2.2.4 Factors\nR stores categorical data, such as nationality, sex etc. by using aspeical data type called factors. If you take for instance, sex, it can have only two values - male or female - and these values may have their idiosyncratic order, for example that females go always first.\nTo make a factor in R you have to pass an atomic vector to the factor() function. This function works by recoding the values in the vector as integers and store the results in an integer vector. R also adds a level attribute which contains the set of labels and their order and a class attribute that says the vector is a factor. Example:\n\n\nCode\nsex <- factor(c(\"m\", \"f\", \"f\", \"m\"))\ntypeof(sex)\n\n\n[1] \"integer\"\n\n\nCode\nattributes(sex)\n\n\n$levels\n[1] \"f\" \"m\"\n\n$class\n[1] \"factor\"\n\n\nFactors can be confusing since they look like characters but behave like integers.\nNote that R will often try to convert character strings to factors when you load and create data. I recommend that you do not allow R to make factors unless you explicitly ask for it. This can usually be controlled by an argument to whatever the data reader function is. For instance you can give the read.csv() function the argument stringsAsFactors = FALSE.\nR has an internal coercion behavior for data types, which you should know about if you work with R. With this knowledge you can do many useful things.\nIf a character string is present in an atomic vector, R will automatically convert every other component in this vector to a character string. If a vector contains only logicals and numbers, R will convert the logicals to numbers. In this case every TRUE becomes a 1 and every FALSE becomes a 0.\nR also uses the coercion rules, when we do math with logicals, like for example\n\n\nCode\nsum(c(TRUE, TRUE, FALSE, FALSE))\n\n\n[1] 2\n\n\nWhat happens here is that R coerces the vector c(TRUE, TRUE, FALSE, FALSE) to the vector c(1, 1, 0, 0) and sums the components.\n\n\n\n3.2.3 Data frames and R lists\nGoing back to our data set on the enegry consumption data, we see that this data set stores values of different types, characters, integers and doubles. How does R achieve this?\nThe answer is that this is achieved by a data structure called a list. List are like atomic vectors, because the group data into a one-dimensional set. However, lists do not group together individual values. List group together R objects, such as atomic vectors or even other lists.\nFor example, you can create a list, which contains a numeric vector of length 31 in its first element, a character vector of length 1 in its second element and a new list of length 2 in its third. This is done by using the list()function of R, like this:\n\nlist_example <- list(100:130, \"R\", list(TRUE, FALSE))\nlist_example\n\n[[1]]\n [1] 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128\n[30] 129 130\n\n[[2]]\n[1] \"R\"\n\n[[3]]\n[[3]][[1]]\n[1] TRUE\n\n[[3]][[2]]\n[1] FALSE\n\n\nThe double bracketed indices tell you which element of the list is being displayed. The single bracketed indices tell you which sub-element of the list is being displayed. For example 100 is the first sub element of the first element in the list. “R” is the first sub element of the second list element.\nThere is lots to say about lists. But this is an advanced topics. We mentioned it here to introduce one of the most important data structres for our course the R dataframe.\n\n\n3.2.4 Data Frames\nData Frames are the two dimensional version of a list. They are by far the most useful storage structure for data analysis. Indeed, our dataset on energy consumption data we have loaded before is an instance of a data frame. Data frames group vectors together in a two dimensional table. As a consequence each variable can have a different type, i.e. each column of the data frame can contain a different data type. Within a column, however, we can have only one data type. The energy consumption data are a typical example of a dataframe.\n\n\nCode\nhead(energy_consumption, n = 10)\n\n\n        Entity Code Year      Cons\n1  Afghanistan  AFG 1980  583.2944\n2  Afghanistan  AFG 1981  666.3782\n3  Afghanistan  AFG 1982  725.6599\n4  Afghanistan  AFG 1983  912.1396\n5  Afghanistan  AFG 1984  941.3926\n6  Afghanistan  AFG 1985  939.6124\n7  Afghanistan  AFG 1986  976.6691\n8  Afghanistan  AFG 1987 1592.7023\n9  Afghanistan  AFG 1988 2805.6096\n10 Afghanistan  AFG 1989 2700.4739\n\n\nEvery column in this tabular array of data can be considered as a vector.\n\n\n3.2.5 Selecting data from R onjects: A toolbox.\nAsking questions about a dataframe and in particular about our energy data requires that we are able to adress particular values in the dataframe. We now learn the most important techniques to do so.\nR has a notation system to address individual values. You write the object name first, followed by a pair of had brackets []. Between the brackets goes a , separating row and column indices. The notation is thus like energy_consumption[,].\nWhen it comes to writing the indices you have six different ways to do this, all of them very simple. You can use:\n\nPositive integers\nNegative integers\nZero\nBlank spaces\nLogical values\nNames\n\nThe simplest are positive integers. When you want to extract the energy consumption in kwh per person in one year - the value of the variable Cons - you would adress for instance the 3rd value in the Cons column, which is in our case the 4th column as\n\nenergy_consumption[3,4]\n\n[1] 725.6599\n\n\nYou can - of course extract more than one value. If you write for instance\n\nenergy_consumption[1:5,4]\n\n[1] 583.2944 666.3782 725.6599 912.1396 941.3926\n\n\nyou will get the first 5 values of the consumption numbers in the dataframe. The colon operator : used here is a very useful R operator. It creates sequences of whole numbers. Thus if you create a vector with the name, say n10 containing the sequence of the first 10 whole numbers, you would write\n\nn10 <- 1:10\n\nNow clearly the indexing rules work in the same way as with dataframes, only that now you have only 1 dimension. Say you want to extract the first three numbers from n10 you would write\n\nn10[1:3]\n\n[1] 1 2 3\n\n\nNote that R’s notation system is not limited to data frames. The same syntax can be used to select values from any R object, provided you supply an index for each dimension of the object. Two things have to be kept in mind. In R indexing begins at 1. In some other programming languages indexing begins at 0. The indexing convention in R is just like in linear algebra. The second thing to note is that if you select two or more columns from a data frame, R will return a new data frame, like in\n\nenergy_consumption[1:5, 3:4]\n\n  Year     Cons\n1 1980 583.2944\n2 1981 666.3782\n3 1982 725.6599\n4 1983 912.1396\n5 1984 941.3926\n\n\nR will always return a dataframe.\nHowever, if you select a single column, R will return a vector:\n\nenergy_consumption[1:5, 4]\n\n[1] 583.2944 666.3782 725.6599 912.1396 941.3926\n\n\nif you prefer to get returned a data frame in this case, you have to add the argument drop = FALSE, like:\n\n\nCode\nenergy_consumption[1:5, 4, drop = FALSE]\n\n\n      Cons\n1 583.2944\n2 666.3782\n3 725.6599\n4 912.1396\n5 941.3926\n\n\nNegative integers work exactly opposite to positive integers. If you type:\n\nhead(energy_consumption[-1,4], n = 10)\n\n [1]  666.3782  725.6599  912.1396  941.3926  939.6124  976.6691 1592.7023 2805.6096 2700.4739 2557.5864\n\n\nR will return the fourth column of the data frame except the first row. We just display the first 10 values using the head() function.\nIf you try to pair a negative and a positive integer in an index, R will return an error. However, you can use both negative and positive integers if you use them in different indices.\nZero is neither positive nor negative, If you use 0 as an index, R will return nothing from a dimension with index 0. The following syntax for instance creates an empty object\n\nenergy_consumption[0,0]\n\ndata frame with 0 columns and 0 rows\n\n\nBlank spaces are used if you want to ask R to select every value in a dimension. So for instance, if you type:\n\n\nCode\n#|code-fold: false\nsel <- energy_consumption[ , 4]\n\n\nR will select the entire column of energy consumption. You can check that the length of this vector is\n\n\nCode\n#|code-fold: false\nlength(sel)\n\n\n[1] 10215\n\n\nas expected.\nLogical Values can also be used for subsetting. If you type for instance\n\nenergy_consumption[1, c(F,F,F,T)]\n\n[1] 583.2944\n\n\nR will select the energy consumption value of the first observation. Note that here we used the R convention that TRUEand T as well as FALSEand F have an equivalent meaning.\nFinally, you can ask for the elements, you want by name. On our case, you could select the first energy_consumption value by the syntax\n\nenergy_consumption[1, \"Cons\"]\n\n[1] 583.2944\n\n\nFinally, note that two types of object in R obey an optional second system of notation. You can extract values from data frames and lists with th $syntax.\nIt works as follows: For example\n\ntest <- energy_consumption$Cons\ntest[1:4]\n\n[1] 583.2944 666.3782 725.6599 912.1396\n\n\nwould select the column of energy consumption numbers in our dataframe, save them in an object names testand then subsequently extract the first four values from the object.\n\n\n3.2.6 Application: Reproduce our histogram of primary per capita energy consumption around the globe in 2019 by a worked example.\nThis was a lot of abstract and dry instruction about some data extraction tools. It will require lost of practice and concrete examples before you get some natural acquaintance with these techniques which belong to the everday routines of data analysis.\nTo see the concept in action, let me take you step by step through an example by showing you how you can produce a histogram, like we discussed in the first section of this chapter starting from the raw data.\nWe have already read the data from the csv file and stored it in an object we have called energy_consumption. We would like to plot a histogram of the annual per capita energy consumption in different countries around the globe for the year 2019.\nLet us look again at the first 10 observations:\n\nhead(energy_consumption, n = 10)\n\n        Entity Code Year      Cons\n1  Afghanistan  AFG 1980  583.2944\n2  Afghanistan  AFG 1981  666.3782\n3  Afghanistan  AFG 1982  725.6599\n4  Afghanistan  AFG 1983  912.1396\n5  Afghanistan  AFG 1984  941.3926\n6  Afghanistan  AFG 1985  939.6124\n7  Afghanistan  AFG 1986  976.6691\n8  Afghanistan  AFG 1987 1592.7023\n9  Afghanistan  AFG 1988 2805.6096\n10 Afghanistan  AFG 1989 2700.4739\n\n\nHow would we extract the observations that refer to the year 2019 only? Here is the first practical use case of logical data types, which will immediately show you their power. Let me suggest the following code and then explain step by step what it does.\n\ndat <- energy_consumption[energy_consumption$Year == 2019, ]\nhead(dat, n = 10)\n\n                 Entity Code Year       Cons\n40          Afghanistan  AFG 2019   945.6454\n95               Africa      2019  4245.7188\n137             Albania  ALB 2019 11266.2578\n192             Algeria  DZA 2019 16140.1963\n234      American Samoa  ASM 2019 26023.6699\n274              Angola  AGO 2019  3429.5928\n314 Antigua and Barbuda  ATG 2019 31384.8633\n369           Argentina  ARG 2019 20785.9141\n399             Armenia  ARM 2019 15538.2012\n433               Aruba  ABW 2019 51178.5859\n\n\nLet me explain what is going on here: We have used the indexing rules and logical subsetting. In the first index we have written a logical condition, namely energy_consumption$Year == 2019. This means that R selects all the rows for which the year variable of energy_consumption is equal to 2019. The logical sign for identical in R is ==. So what R does then is checking for each value of the Year variable whether it is identical to 2019 - in which case the logical comparison results in TRUE or not, in which case the result would be FALSE. Then by logical subsetting all rows for which the comparison vector is TRUE will be selected. Note that we had to tell R that it needs to compare the Year variable. Year is selected in a data frame by energy_consumption$Year. We have then stored all the data in a vector I have called dat and then looked at the first 10 rows. You see that only the observations where the Year is 2019 have been kept, as we had intended.\nNow we see from the output that the Entity variable apparently not only contains individual countries but also whole regions or continents, like Africa in our example. It seems that the regions have no ISO code but instead an empty character.\nLet’s try to apply the logical subsetting logic and our knowledge of character types to filter out Entities which have no value in the Codevariable. One way to achieve this would be, for example the code:\n\ndat_countries <- dat[dat$Code!=\"\", ]\nhead(dat_countries, n = 10)\n\n                 Entity Code Year       Cons\n40          Afghanistan  AFG 2019   945.6454\n137             Albania  ALB 2019 11266.2578\n192             Algeria  DZA 2019 16140.1963\n234      American Samoa  ASM 2019 26023.6699\n274              Angola  AGO 2019  3429.5928\n314 Antigua and Barbuda  ATG 2019 31384.8633\n369           Argentina  ARG 2019 20785.9141\n399             Armenia  ARM 2019 15538.2012\n433               Aruba  ABW 2019 51178.5859\n545           Australia  AUS 2019 66614.8828\n\n\nNow Africa is out. Of course this is no proof that I have now only entities with ISO-codes left but it is an indication. We can check this. But let me first expalin what is going on here.\nI now work with the object dat, the object we have created before by filtering for the observations in which the Yearvariable is equal to 2019. Now we tell R compare the entries in the Codevariable, i.e. in dat$code with the condition that they are not equal to an empty string. The symbol for not identical in R is !=. We know that the variable Code is of type character hence all codes are strings within quotation marks. An empty string is thus written as \" \".\nHow could we check - by the way that the Code variable does not contain any empty string anymore? Here is how:\n\nsum(dat_countries$Code == \"\")\n\n[1] 0\n\n\nHere I have used two rules we have dicussed before, logical data types and coercion. First we ask R to check whether any Code variable in dat_countiesstill has any empty string. This will create a vector of logicals like (showing only the first five entries)\n\nhead(dat_countries$Code == \"\", n = 5)\n\n[1] FALSE FALSE FALSE FALSE FALSE\n\n\nNow I use coercion rules by summing over this vector. The function sum() in R is a function for summation. For example, if I have the vector c(1,2,3,4,5,6,7,8,9,10) and type\n\nsum(c(1,2,3,4,5,6,7,8,9,10))\n\n[1] 55\n\n\nR will add up the numbers.\nNow if I have a vector of logicals and apply a numerical function to it, R will by its coercion rules, force TRUE into 1 and FALSE into 0. The result that sum(dat_countries$Code == \"\") equals 0 means that the vector for our logical test contained FALSE only. So indeed there is no empty Code variable anymore.\nNow we are ready to do a histogram of the per capita primary annual energy consumption by\n\nhist(dat_countries$Cons, \n     xlab = \"Primary energy consumption in kilowatt-hours per person per year.\",\n     main = \"Primary energy Consuption per Capita 2019\")\n\n\n\n\nI have here used the xlaband mainarguments with a character value to have a nicer description of the histogram. Otherwise the x axis would have been labeled dat_countries$Cons and the title would have been Histogram of dat_countries$Cons. Note that we have here a histogram in the absolute frequency scale."
  },
  {
    "objectID": "summarizing_and_communicating_lots_of_data.html#the-average-and-the-standard-deviation",
    "href": "summarizing_and_communicating_lots_of_data.html#the-average-and-the-standard-deviation",
    "title": "3  Summarizing and communicating lots of data",
    "section": "3.3 The average and the standard deviation",
    "text": "3.3 The average and the standard deviation\nWith a histogram we can summarize a large amount of data and get some insights about the variation in the data. Often we can summarize data much more drastically by just one number describing the center of the histogram and the spread around this center. When I write center an spread here, these are just ordinary words with no special technical meaning.\nWhen we do statistics we need precise definitions and we will study and learn these definitions in this section. The average is often used to find the center. Another measure to find the center is the median. The standard deviation measures spread around the average. The interquartile range is another measure of spreads.\nBefore we go into these definitions, let me show for a start two histograms, both have the same center, but the second one is more spread out, there are more observations farther away from the center.\n\n\n\n\n\n\n\n(a) Histogram 1\n\n\n\n\n\n\n\n(b) Histogram 2\n\n\n\n\nFigure 3.3: Histogram 1 and Histogram 2 have the same center but Histogram 2 is more spread out\n\n\nThese distributions can be summarized by the center and the spread. But what about a situation like this?\n\n\n\nFigure 3.4: A bimodal distribution\n\n\nIn some cases such distribution can occur naturally. Think, for example, about the distribution of the elevation data of surface area of the earth. Most of the surface area of the earth is taken by the sea floor at about three miles below the sea level or the continental planes around sea level. If we would report only the center an the spread of this histogram, plotted in the picture as the red and blue vertical lines, we would miss these peaks.\n\n3.3.1 The average\nHuman growth depends on good nutrition and the availability of medical services to effectively treat illness. Thus human height in a population has for a long time been a subject of study. The average human height in a population varies with the general living standards. In statistical terminology this is expressed by saying that human height and growth are positively correlated. This fact makes data on human height especially interesting for historians who study the history of living conditions. Because humans tend to get taller when they have good living conditions, human height can reveal some information on living conditions, height data can be an indirect measure of living conditions. This is especially interesting for periods when very little or no data were collected and recorded.\nAs we see from the class activity in the introductory unit where we collected data in your class on height and hand span, we learned that usually heights differ quite a bit within a group. This is also true in a population. The many different height data, which are usually collected in survey studies on health are usually summarized by studying average height. Height data are thus also interesting for us as one specific context to study height data.\n\n\n\n\n\n\nAverage\n\n\n\nThe average of a list of numbers is defined as their sum, divided by how many numbers their are in the list.\n\n\nFor example the average of the list \\(L\\)\n\nL <- c(9,1,2,2,0)\n\nwould be computed as:\n\\[\\begin{equation}\n\\frac{(9+1+2+2+0)}{5} = \\frac{14}{5} = 2.8\n\\end{equation}\\]\nBy now it will be no surprise for you that R provides a function for computing averages. This function is known by the alternative name for the average, called the mean.\nHere is how you would compute the mean using R.\n\nmean(L)\n\n[1] 2.8\n\n\nwhich is indeed what we should get as a result.\nLet’s go back to the issue of human height data. Let us first look at a sample of height data and how they look like. This is a data set from the statistics Online Computational Resource (SOCR) of the university of California Los Angeles.9 for details.] The dataset contains 25,000 synthetic records of human heights and weights of 18 years old children.9 See http://www.socr.ucla.edu/\nLet us look at the histogram first. But before we do this, let me briefly explain a feature of R that will be very useful for us in the remainder of this course.\n\n3.3.1.1 A brief digression: Installing and using R packages\nWhen we install R we get a version the program which is called base-r. This is the term for the basic version, which comes with any R installation. The base version contains all the important functions. The hist()function is part of base-r for example, but also mean(), lenght() etc.\nBase R can be extended by adding so called packages. A package contains additional functions for doing computations or other things like graphics with R written by other people or by yourself, once you have learned how to write a package. Packages have to be installed and then they need to be loaded to make the functions of the package available to R. You have to install a new package only once, but you have to load it in every new session of R if you want to use it.\nThe first package, you will encounter in this course is a package that I have prepared when preparing the course. It contains all the data sets we use here. When the package is loaded these data sets are available for use. The package that contains our data is called JWL. You need to install it first. As you might guess there is an R function to install packages. The function is called install.packages(). This function works if the package is beeing made available via the R CRAN-server at https://cran.r-project.org/. Our package is a package that I have assembled for this course and it was installed from a private archive. It is not on CRAN. For you taking this course the package is already installed.\nTo be able to make the funcions and the data contained in the package available to R you need to laod the package first. This is done with the function library(). Now assume we want to load the package JWL we need to type\n\nlibrary(JWL)\n\nNow all the datasets bundled in the JWL-package are available for use to you. This includes the data sets on human height data I have prepared for this course.\nThe data set is called socr_height_weight and you can study the details and description of the data by typing ?socr_height_weight at the prompt.\nLet us start by first saving the socr_height_weight data in an R object which we call - say - ´dat.\n\ndat <- socr_height_weight\n\nWe can inspect the R object, using the R function str(). This function compactly displays the internal structure of an R object.\n\nstr(dat)\n\n'data.frame':   25000 obs. of  3 variables:\n $ Index : num  1 2 3 4 5 6 7 8 9 10 ...\n $ Height: num  65.8 71.5 69.4 68.2 67.8 ...\n $ Weight: num  113 136 153 142 144 ...\n\n\nWe see that dat is a data frame with three variables Index, Height and Weight. All variables are of type numeric.\nFrom the help information on the dataset we know that the units of the Height variable is inches. Inches are used in the English speaking countries but in many other parts of the world the more common units are metric units. Human height in metric units would be measured in cm rather than in inches. This is an excellent opportunity to practice some of the R knowlegde you have learned in this unit.\n\n\n\n\n\n\nNow you try\n\n\n\nThe variable Height in the dataframe dat is measured in inches. 1 inch is 2.54 cm. Transform the Height variable such that it shows the Height in cm rather than in inches,\n\n\n\n\nCode\n# the hight data are in inches and the weight data are in pounds. Convert to metric\n# units cm\n\ndat$Height <- dat$Height*2.54\n\n\nOnce you have done this little transformation of units, let us plot a histogram first. Let us also lable the x-axes as “Height in cm” and write as a title of the histogram “Height of 18 year old humans”\n\n\n\n\n\n\nNow you try\n\n\n\nUse R to plot a histogram of the Height variabe in the dat dataframe. Label the x-axes as “Height in cm” and write as a title of the histogram “Height of 18 year old humans”\n\n\n\n\nCode\nhist(dat$Height, xlab = \"Height in kg\", main = \"Height of 18 year old humans\")\n\n\n\n\n\nThe distribution looks symmetric. If we summarize these data by taking an average in one number we will capture the center of the distribution fairly well. Let us compute the average, using the mean funcion.\n\n\n\n\n\n\nNow you try\n\n\n\nUse R to compute the average or mean of the Height variable in the dat dataframe.\n\n\n\n\nCode\nmean(dat$Height)\n\n\n[1] 172.7025\n\n\nThe average height in this dataset is about 173 cm. The average is a very powerful way of communicating data by compressing many observations - in this example 25000 - into ons single number, the mean.\nThis compression is, however, only achieved by loosing some information on individual differences. For example in our dataset the average height is 173 cm. But there are about 4 % who are larger than 180.9 and there are also about 4 % who are smaller than 164.2. With 25000 individuals these are 1000 individuals who are beyond these thresholds. This diversity is hidden in the aggregation.\nThis is a good opportunity to show you a cool feature or trick in R how we could in one line compute such percentages. Assume we want to compute the percentage of individuals in our data who are larger than the mean of 172.7025. How can we do this?\nLogicals are a powerful data type to make such a computation. Say we have 10 numbers, given by\n\nx <- c(4,5,1,2,4,2,0,10,11,6)\n\nNow we could ask R which entries of x are larger than 2 by typing\n\nx > 2\n\n [1]  TRUE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE\n\n\nThe output is a vector of logicals where R compares each entry in xwith 2 and if it is larger it returns TRUE and otherwise FALSE (this includes all entries which are exactly 2).\n\n\n\n\n\n\nNow you try\n\n\n\nReplace every TRUE value with 1 and every FALSE value with 0 and compute the mean. What do you get? Compute the percentage of values in xwhich are larger than 2. What did you get? Explain!\n\n\nNote that, when you apply the function mean() to a vector of data of type logical the coercion rules of R will coerce TRUE to 1 and FALSE to 0 automatically. So if you apply mean() to x you will get the result you have computed before.\nThis insight can be used to compute the percentage of values that fulfill a certain condition in R. Here the condition is that the Height is larger than the mean.\n\n\n\n\n\n\nNow you try\n\n\n\nCompute the percentage of Heights in dat which are larger and the percentage of Heights that are smaller than the mean of 172.7025.\n\n\n\n\nCode\nmean(dat$Height > 172.7025)\n\n\n[1] 0.5006\n\n\nCode\nmean(dat$Height < 172.7025)\n\n\n[1] 0.4994\n\n\nThe value of a distribution where 50 % of all values are larger than this given value and 50 % are smaller is another one number summary you can give for a large set of data which describes the center of a distribution in another way. It is called the median. R also has a built in function for the median, which is called - as you might already guess - median(). Let us compute the median height in our data.\n\nmedian(dat$Height)\n\n[1] 172.7091\n\n\nIn this case the median and the mean give the same value up to the third digit. They are for practical reasons identical. The reason is that in the case of the measure of Height the distribution is highly symmetric. In practice you will encounter many situations where the distribution of a variable is not even approximately symmetric.\nA typical case of a distribution that us typically not symmetric but skewed - as it is called in statistical terminology - is income. The following histogram which is scaled in relative frequencies shows the data for the global income distribution in the year 2013 as reported by two economists Hellebrand and Mauro (2015) from the Peterson Institute, a US based research institution.10 The unit of measurement is US dollars in so called purchasing power parity, a concept economists use to make income figures comparable in terms of the amount of goods they can buy.1110 We have used the data they provide to simulate a sample of 100.000 observations consisten with the numbers they report. Thus our data used here are a simulation reproducing the characteristics of the data reported in this paper. We will soon learn how to do simulations using R. For the moment we need you to trust that we have done this correctly.11 When reporting income figures we could translate all national figures gathered from around the world into one common currency (for instance, US dollars) using exchange rates from currency markets. But because market exchange rates do not always reflect the different price levels between countries, economists often opt for a different alternative. They create a hypothetical currency, called ‘international dollars’, and use this as a common unit of measure. The idea is that a given amount of international dollars should buy roughly the same amount – and quality – of goods and services in any country. This way of measuring monetary amounts is called dollars in purchasing power parity or PPP.\n\n\nCode\nlibrary(readxl)\naux <- read_excel(\"~/R/Statistics_JWL/data/income/wp15-7.xlsx\", sheet = 5, range = \"B1:D1401\")\ninc <- aux[-1 ,c(1,3)]\nnames(inc) <- c(\"Income\", \"Percent\")\ninc$Income <- as.numeric(unlist(inc$Income))\ninc$Percent <- as.numeric(unlist(inc$Percent))\n\ninc_trunc <- inc$Income[inc$Income<=14000]\n\ndata <- sample(inc_trunc, 10^5, replace = TRUE, prob = inc$Percent[0:701])\n\nhist(data, breaks = 27, xlab = \"Income in purchasing parity power dollars\", main = \"Global income distribution\")\n\n\n\n\n\nNow the mean and the median of these data would give us:\n\n\nCode\nmean(data)\n\n\n[1] 3012.174\n\n\nCode\nmedian(data)\n\n\n[1] 1700\n\n\nThere is a big difference in both numbers as you can see even better when we show the mean (red line) and the median (blue) income value of our data in the graph.\n\n\nCode\nhist(data, breaks = 27, xlab = \"Income in purchasing parity power dollars\", main = \"Global income distribution\")\nabline(v = mean(data),                       # Add red line for mean\n       col = \"red\")\nabline(v = median(data),                     # Add blue line for median\n       col = \"blue\")\n\n\n\n\n\nWhen the distribution is not symmetric the mean does not capture the center of the distribution well. We have stored the data of our histogram in an object we have chosen to call data. Let us verify that the median is actually the value above that is in the middle of all values and compare this with the mean for these skewed distribution.\nLet’s check the median first\n\nmean(data > 1700)\n\n[1] 0.49616\n\nmean(data < 1700)\n\n[1] 0.49998\n\n\nNow let us do the same check for the mean\n\nmean(data > 3012.174)\n\n[1] 0.32447\n\nmean(data < 3012.174)\n\n[1] 0.67553\n\n\nYou see that the mean now does not capture the center of the distribution well. Only 32 % have incomes above the mean income and 68 % have incomes below. The point where 50% are above and 50 % are below is actually at 1700, as expressed by the median.\nDiscuss the difference between a cross section and longitudinal data, discuss that a gap in averages can hide substantial overlap in distribution (needs microdata, though; DHS?). To do\n\n\n\n3.3.2 Exercises for the Average\nExercise 1:\n\nThe number 3 and 5 are marked by crosses on the horizontal line below. Find the average of these two numbers and mark it by an arrow.\n\nRepeat (a) for the list 3,5,5\n\nTwo numbers are shown below by crosses on a horizontal axis. Draw an arrow pointing to their average.\n\n\nExercise 2:\nA list has 10 entries. Each entry is either 1, 2 or 3. What must the list be of the average is 1? if the average is 3? Can the average be 4?\nExercise 3:\nWhich of the following lists has a bigger average? Or are they the same? try to answer without doing arithmetic.\n\n10, 7, 8, 3, 5, 9 (ii) 10, 7, 8, 3, 5, 9, 11\n\nExercise 4:\nTen people in a room have an average height of 1.69 m. An 11th person is 1.96 enters the room. Find the average height of all 11 people.\nExercise 5:\nTwenty-one people in a room have an average height of 1.68. A 22nd person who is 1.96 enters the room. Find the average height of all 22 people. Compare with exercise 4.\nExercise 6:\nTwenty-one people in a room have a height of 1.68. A 22nd person enters the room. How tall would he have to be to raise the average height by 1 inch.\nExercise 7:\nIf you go back to figure Figure 3.4, where in the Histogram would be mountains? Where would you find planes? Where would the trenches in the sea floor show?\nExercise 8:\nDiastolic blood pressure is considered a better indicator of heart trouble than systolic pressure. The figure below shows age-specific average diastolic blood pressure for men age 20 and over in a health survey from the US (HANES5 (2003-04)). True or fales: The data show that as men age, their diastolic blood pressure increases until age 45 or so. and then decreases. If false, how do you explain the pattern in the graph? (Blood pressure is measured in “mm” that is millimeter of mercury)\n\nExercise 9:\nAverage hourly earnings in the US are computed each month by the Bureau fo Labor statistics using payroll data from commercial establishments. The Bureau figures the total wages paid out to non-supervisory personnel, and divides by the total hours worked. During recessions, average hourly earnings typically go up. When the recession ends, average hourly earnings often start going down. How can this be?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nHellebrand, Tomas, and Paolo Mauro. 2015. “The Future of Worldwide Income Distribution.” Brooking Institution Working Paper Series 7 (15). file:///home/martinsummer/R/Statistics_JWL/data/income/Hellebrand_Mauro_wp15-7.pdf."
  },
  {
    "objectID": "from_limited_data_to_populations.html",
    "href": "from_limited_data_to_populations.html",
    "title": "4  From limited data to populations",
    "section": "",
    "text": "Inductive inference requires working from data to study sample and study population to target population.\nAt each stage bias can crop up. The best way to proceed from sample to study population is if you have drawn a random sample. Introduce the idea that a population can be thought of as a group of individuals but also as a probability distribution for a random observation drawn from that population Populations can be summarized using parameters that mirror the summary statistics of sample data. It often occurs that data do not arise as a sample from a literal population. We can always imagine data as drawn from a metaphorical population of events that could have occurred but didn’t."
  },
  {
    "objectID": "from_limited_data_to_populations.html#outcome",
    "href": "from_limited_data_to_populations.html#outcome",
    "title": "4  From limited data to populations",
    "section": "4.2 Outcome",
    "text": "4.2 Outcome\nMake the concept of a random sample and a probability distribution tangible by using the computer."
  },
  {
    "objectID": "what_causes_what.html",
    "href": "what_causes_what.html",
    "title": "5  What causes what?",
    "section": "",
    "text": "In this lecture we discuss what causation means in a statistical sense, why we need be careful to distinguish between causation and correlation.\n\nCausation in a statistical sense means that when we intervene, the chances of different outcomes vary systematically.\nCausation is difficult to establish statistically, but well designed randomized trials are the best available framework. 3.Principles that helped clinical trials to identify effects. 4, Observational data may have background factors influencing the apparent relationships between exposure and outcome which may be either observed confounders or lurking factors.\nStatistical methods do not suspend judgment which is always required for the confidence with which causation can be claimed."
  },
  {
    "objectID": "what_causes_what.html#outcome",
    "href": "what_causes_what.html#outcome",
    "title": "5  What causes what?",
    "section": "5.2 Outcome",
    "text": "5.2 Outcome\nThis is a conceptually difficult topic. It is, however, not technically difficult but it will need lots of examples. Fortunately there are many good (and bad) real world examples that I hope will stick with the students as reference examples after the course. Students should understand the idea of randomized trials and observational studies as well as the general ideas of comparison in statistical analysis."
  },
  {
    "objectID": "modelling_relationships_using_regression.html",
    "href": "modelling_relationships_using_regression.html",
    "title": "6  Modelling relationships using regression",
    "section": "",
    "text": "Regression models provide a mathematical representation between a set of explanatory variables and a response.\n\nThe coefficients in a regression represent how much we expect the response to change when the explanatory variable is observed to change.\nRegression to the mean\nRegression models can incorporate different types of response variable\nExplanatory variables and non-linear relationships\nBe cautious in interpreting models and don’t take them literally."
  },
  {
    "objectID": "modelling_relationships_using_regression.html#outcome",
    "href": "modelling_relationships_using_regression.html#outcome",
    "title": "6  Modelling relationships using regression",
    "section": "6.2 Outcome",
    "text": "6.2 Outcome\nThe students should understand the concept of regression and how it works and should be correctly interpreted. They should develop a good understanding that a method like regression does not provide an automatism for making predictions and will always need cautious interpretation. The students should learn some tools and example what cautious interpretation means and what is helpful in this respect."
  },
  {
    "objectID": "algorithmic_prediction.html",
    "href": "algorithmic_prediction.html",
    "title": "7  Algorithmic prediction",
    "section": "",
    "text": "Algorithms built from data can be used for classification and prediction in technological applications.\n\nImportance of guarding an algorithm against over fitting\nAlgorithms can be evaluated according to classification accuracy, their ability to discriminate between groups and their overall predictive accuracy\nComplex algorithms can lack transparency and it may be worth trading off some accuracy for comprehension.\nThere are many challenges in using algorithms and machine learning, be aware of them."
  },
  {
    "objectID": "algorithmic_prediction.html#outcome",
    "href": "algorithmic_prediction.html#outcome",
    "title": "7  Algorithmic prediction",
    "section": "7.2 Outcome",
    "text": "7.2 Outcome\nWith respect to algorithmic prediction the students should have seen what it is and see a not too complex example, for instance in classification. They should be able to see the close similarity between regression and machine learning methods and be able to understand the jargon. Both regression and machine learning use sometimes different notions for the same thing."
  },
  {
    "objectID": "how_sure_can_we_be.html",
    "href": "how_sure_can_we_be.html",
    "title": "8  How sure can we be about what is going on",
    "section": "",
    "text": "Probability theory provides a formal language and mathematics for dealing with chance phenomena. Probability is often counter intuitive but using the idea of expected frequency improves intuition. Probability ideas can be very useful in statistics even if there is no explicit use of a randomizing mechanism. Many social phenomena show a remarkable regularity in their overall pattern while individual events are entirely unpredictable."
  },
  {
    "objectID": "how_sure_can_we_be.html#outcome",
    "href": "how_sure_can_we_be.html#outcome",
    "title": "8  How sure can we be about what is going on",
    "section": "8.2 Outcome",
    "text": "8.2 Outcome\nStudents should learn the simplest and most basic facts about probability as a language to quantify uncertainty, the most important rules to manipulate probability as well as the concept of conditional probability."
  },
  {
    "objectID": "probability.html",
    "href": "probability.html",
    "title": "9  Probability: Quantifying uncertainty and variablility",
    "section": "",
    "text": "11 Outcome\nStudents should learn the simplest and most basic facts about probability as a language to quantify uncertainty, the most important rules to manipulate probability as well as the concept of conditional probability."
  },
  {
    "objectID": "probability_and_statistics.html",
    "href": "probability_and_statistics.html",
    "title": "10  Putting probability and statistics together",
    "section": "",
    "text": "This will be conceptually the most difficult part of the course. The main ideas that should be conveyed in this unit are\n\nUsing probability theory we can derive the sampling distribution of summary statistics from which formulae for confidence intervals can be derived.\nExplain what a 95 % confidence interval means\nThe central limit theorem and the normal distribution\nThe role of systematic error due to non random causes and the role of judgment\nExplain the idea that confidence intervals can be calculated even when we observe all the data which then represent uncertainty about the parameters of an underlying metaphorical population."
  },
  {
    "objectID": "probability_and_statistics.html#outcome",
    "href": "probability_and_statistics.html#outcome",
    "title": "10  Putting probability and statistics together",
    "section": "10.2 Outcome",
    "text": "10.2 Outcome\nThe students should gain a firm understanding of confidence intervals and how they help us in quantifying uncertainty of predictions we make based on our available data. They should see and understand how and why it is sometimes more convenient and parsimonious to have formulae for confidence intervals rather than quantifying the uncertainty from simulation. The intuitive understanding of the limit theorems and when they can be legitimately applied will be important here."
  },
  {
    "objectID": "answering_questions_and_claiming_discoveries.html",
    "href": "answering_questions_and_claiming_discoveries.html",
    "title": "11  Answering questions and claiming discoveries",
    "section": "",
    "text": "Formal statistical testing as a major empirical tool for answering questions and claiming discoveries.\n\nTests of null hypothesis as a major part of statistical practice\np-value as the measure of incompatibility between the observed data and the null hypothesis\nThe traditional p value thresholds.\nThe need to adjust thresholds with multiple tests\nCorrespondence between p-values and confidence intervals\nNeyman-Pearson theory (alternative hypothesis and type 1 and type 2 error).\nSequential testing\nThe misinterpretation of p-values."
  },
  {
    "objectID": "answering_questions_and_claiming_discoveries.html#outcomes",
    "href": "answering_questions_and_claiming_discoveries.html#outcomes",
    "title": "11  Answering questions and claiming discoveries",
    "section": "11.2 Outcomes",
    "text": "11.2 Outcomes\nStudents should learn the basic ideas of hypothesis testing and the terminology around it."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Antony, Volk, and Atkinson Jeremy. 2013. “Infant and Child Death\nin the Human Environment of Evolutionary Adaptation.”\nEvolution and Human Behavior 34: 182–92.\n\n\nCairo, Alberto. 2016. The Truthful Art: Data, Charts, and Maps for\nCommunication. New Riders.\n\n\nHellebrand, Tomas, and Paolo Mauro. 2015. “The Future of Worldwide\nIncome Distribution.” Brooking Institution Working Paper\nSeries 7 (15). file:///home/martinsummer/R/Statistics_JWL/data/income/Hellebrand_Mauro_wp15-7.pdf.\n\n\nKuhns, Michael. n.d. “What Is a Tree?” https://forestry.usu.edu/tree-identification/what-is-a-tree.\n\n\nRoser, Max. 2019. “Child Mortality Is an Everyday Tragedy of\nEnormous Scale That Rarely Makes the Headlines.” https://ourworldindata.org/child-mortality-everyday-tragedy-no-headlines.\n\n\nRosling, Hans, Ola Rosling, and Anna Rosling-Rönnlund. 2018.\nFactfullness, 10 Reasons Why We Are Wrong about the World - and Why\nThings Are Better Than You Think. Sceptre.\n\n\nSmil, Vaclav. 2020. Numbers Don’t Lie: 71 Things You Need to Know\nabout the World. Penguin Books.\n\n\nSpiegelhalter, David. 2019. The Art of Statistcis: Learning from\nData. Pelican Books.\n\n\nWickham, Hadley. 2014. “Tidy Data.” Journal of\nStatistical Software 59 (10): 1–23. https://doi.org/10.18637/jss.v059.i10."
  }
]