---
title: "Getting Demographic Data"
author: "Martin Summer"
format: html
editor: source
---

We would like to get a global demographic dataset using the data from the idbr 
database in the US. We try to work with the idbr package provided by walker, which
reads the IDB census data, a data collection from the US census bureau: https://github.com/walkerke/idbr
The API key is 8b046bdcea1cc2ba58889846bf066ffc73c70ebe

This package does not seem to work or the communication with the API is difficult.
So we will not execute the following code.

```{r}
library(devtools)
install_github('walkerke/idbr')

library(idbr)
idb_api_key('8b046bdcea1cc2ba58889846bf066ffc73c70ebe')
```

We could instead of using the API download the dataset and read it with readr

```{r}
library(readr)
```

This reads the 5 years datafile from the IDB

```{r}
dat <- read_delim("~/R/Statistics_JWL/materials/people_count/idbzip/idb5yr.txt", delim = "|", show_col_types = F)
```

```{r}
# It looks like the last two characters in GEO_ID are country codes. Let's try this and see where we
# get

# write function to extract the last two characters from a string

substrRight <- function(x, n){
  substr(x, nchar(x)-n+1, nchar(x))
}

# extract the last two characters from GEO_ID

dat$GEO_ID <- substrRight(dat$GEO_ID,2)
```

We use the `rworldmap` package to assign a name to the iso-codes.

```{r}
library(rworldmap)
```
```{r}

```






```{r}
# read ISO codes

iso <- read_csv("~/R/Statistics_JWL/materials/people_count/idbzip/ISO-alpha2.csv", show_col_types = F)
names(iso) <- c("GEO_ID", "Name")
```

```{r}
dat_new <- merge(iso, dat, by = "GEO_ID")

dat_new_sorted <- dat_new[order(dat_new$GEO_ID, dat_new$"#YR"), ]
```

```{r}
my_labels <- read_csv("~/R/Statistics_JWL/materials/people_count/idbzip/labels.csv")

```

```{r}
library(Hmisc)

data_dub <- dat_new_sorted

label(data_dub) <- as.list(my_labels[match(names(data_dub), names(my_labels))])
```

